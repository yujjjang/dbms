cscope 15 $HOME/Documents/DBMS_2018_2/dbms/proj3 -q 0000000449 0000063418
	@include/bpt.h

1 #i‚de‡
__BPT_H__


2 
	#__BPT_H__


	)

5 
öô_db
(
num_buf
);

6 
shutdown_db
();

8 
›í_èbÀ
(* 
fûíame
, 
num_cﬁumn
);

9 
˛o£_èbÀ
(
èbÀ_id
);

12 
öt64_t
* 
föd
(
èbÀ_id
, i¡64_à
key
);

13 
ö£π
(
èbÀ_id
, 
öt64_t
 
key
, i¡64_t* 
vÆue
);

14 
ªmove
(
èbÀ_id
, 
öt64_t
 
key
);

17 
öt64_t
* 
föd
(
èbÀ_id
, i¡64_à
key
, 
åx_id
, * 
ªsu…
);

18 
upd©e
(
èbÀ_id
, 
öt64_t
 
key
, i¡64_t* 
vÆue
, 
åx_id
, * 
ªsu…
);

20 
begö_tx
();

21 
boﬁ
 
íd_tx
(
åx_id
);

23 
¥öt_åì
(
èbÀ_id
);

24 
föd_™d_¥öt
(
èbÀ_id
, 
öt64_t
 
key
);

25 
li˚n£_nŸi˚
( );

26 
ußge_1
( );

27 
ußge_2
( );

	@include/bpt_internal.h

1 #i‚de‡
__BPT_INTERNAL_H__


2 
	#__BPT_INTERNAL_H__


	)

3 
	#Vîsi⁄
 "1.14"

	)

56 
	~<°dio.h
>

57 
	~<°dlib.h
>

58 
	~<°dboﬁ.h
>

59 
	~<°döt.h
>

60 
	~<°rög.h
>

61 
	~<öây≥s.h
>

62 
	~<as£π.h
>

63 
	~<f˙é.h
>

64 
	~<uni°d.h
>

66 
	~"ty≥s.h
"

67 
	~"∑ge.h
"

68 
	~"èbÀ.h
"

69 
	~"fûe.h
"

70 
	~"buf.h
"

71 
	~"∑nic.h
"

72 
	~"lock.h
"

73 
	~"åx.h
"

75 #ifde‡
WINDOWS


76 
	#boﬁ
 

	)

77 
	#Ál£
 0

	)

78 
	#åue
 1

	)

85 
	#MIN_ORDER
 3

	)

86 
	#MAX_ORDER
 256

	)

88 
	#IS_DELAYED_MERGE


	)

91 
	#LICENSE_FILE
 "LICENSE.txt"

	)

92 
	#LICENSE_WARRANTEE
 0

	)

93 
	#LICENSE_WARRANTEE_START
 592

	)

94 
	#LICENSE_WARRANTEE_END
 624

	)

95 
	#LICENSE_CONDITIONS
 1

	)

96 
	#LICENSE_CONDITIONS_START
 70

	)

97 
	#LICENSE_CONDITIONS_END
 625

	)

100 
‹dî_öã∫Æ
;

101 
‹dî_Àaf
;

102 
Tønß˘i⁄M™agî
 
åx_sys
;

103 
LockM™agî
 
lock_sys
;

104 
BufPoﬁ
 
poﬁ
;

109 
boﬁ
 
föd_Àaf
(
TabÀ
 *
èbÀ
, 
öt64_t
 
key
, 
LófPage
** 
out_Àaf_node
);

110 
boﬁ
 
föd_Àaf
(
TabÀ
 *
èbÀ
, 
öt64_t
 
key
, 
LófPage
** 
out_Àaf_node
, * 
buf_∑ge_i
);

111 
öt64_t
 *
föd_ªc‹d
(
TabÀ
 *
èbÀ
, i¡64_à
key
);

112 
öt64_t
 *
föd_ªc‹d
(
TabÀ
 *
èbÀ
, i¡64_à
key
, 
åx_t
* 
åx
);

115 
cut
–
Àngth
 );

118 
upd©e_ªc‹d
(
TabÀ
* 
èbÀ
, 
öt64_t
 
key
, i¡64_t* 
vÆue
, 
åx_t
* 
åx
);

121 
°¨t_√w_åì
(
TabÀ
 *
èbÀ
, 
öt64_t
 
key
, i¡64_t* 
vÆue
);

122 
ö£π_öto_Àaf
(
TabÀ
 *
èbÀ
, 
LófPage
* 
Àaf_node
, 
öt64_t
 
key
,

123 
öt64_t
* 
vÆue
);

124 
ö£π_öto_Àaf_a·î_•lôtög
(
TabÀ
 *
èbÀ
, 
LófPage
* 
Àaf_node
,

125 
öt64_t
 
key
, i¡64_t* 
vÆue
);

126 
ö£π_öto_∑ª¡
(
TabÀ
 *
èbÀ
, 
NodePage
* 
À·
, 
öt64_t
 
key
,

127 
NodePage
* 
right
);

128 
ö£π_öto_√w_roŸ
(
TabÀ
 *
èbÀ
, 
NodePage
* 
À·
, 
öt64_t
 
key
,

129 
NodePage
* 
right
);

130 
gë_À·_ödex
(
TabÀ
 *
èbÀ
, 
I¡î«lPage
* 
∑ª¡
, 
off_t
 
À·_off£t
);

131 
ö£π_öto_node
(
TabÀ
 *
èbÀ
, 
I¡î«lPage
 * 
∑ª¡
, 
À·_ödex
,

132 
öt64_t
 
key
, 
off_t
 
right_off£t
);

133 
ö£π_öto_node_a·î_•lôtög
(
TabÀ
 *
èbÀ
, 
I¡î«lPage
* 
∑ª¡
,

134 
À·_ödex
, 
öt64_t
 
key
, 
off_t
 
right_off£t
);

135 
ö£π_ªc‹d
(
TabÀ
 *
èbÀ
, 
öt64_t
 
key
, i¡64_t* 
vÆue
);

138 
gë_√ighb‹_ödex
(
TabÀ
 *
èbÀ
, 
NodePage
* 
node_∑ge
);

139 
adju°_roŸ
(
TabÀ
 *
èbÀ
, 
NodePage
* 
roŸ_∑ge
);

140 
cﬂÀs˚_nodes
(
TabÀ
 *
èbÀ
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

141 
√ighb‹_ödex
, 
k_¥ime
);

142 
ªdi°ribuã_nodes
(
TabÀ
 *
èbÀ
, 
NodePage
* 
node_∑ge
,

143 
NodePage
* 
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime_ödex
,

144 
k_¥ime
);

147 
dñëe_íåy
(
TabÀ
 *
èbÀ
, 
NodePage
* 
node_∑ge
, 
öt64_t
 
key
);

148 
dñëe_ªc‹d
(
TabÀ
 *
èbÀ
, 
öt64_t
 
key
);

	@include/buf.h

1 #i‚de‡
__BUF_H__


2 
	#__BUF_H__


	)

3 
	~<muãx
>

5 
	~"èbÀ.h
"

6 
	~"∑ge.h
"

8 
	s_BufPoﬁ
 {

9 
Page
* 
	m∑ges
;

11 
	m°d
::
muãx
 
buf_poﬁ_muãx
;

14 
	m°d
::
muãx
* 
buf_∑ge_muãx
;

16 
Page
* 
	mÃu_hód
;

17 
Page
* 
	mÃu_èû
;

18 
	mnum_buf
;

19 
	mtŸ_pö˙t
;

20 } 
	tBufPoﬁ
;

22 
öô_√w_hódî_∑ge
(
HódîPage
 *
hódî_∑ge
, 
èbÀ_id
, 
num_cﬁumn
);

24 
lﬂd_hódî_∑ge
(
TabÀ
 *
èbÀ
);

26 
Page
* 
Æloc_∑ge
(
TabÀ
 *
èbÀ
);

28 
Page
* 
gë_∑ge
(
TabÀ
 *
èbÀ
, 
∑gíum_t
 
∑gíum
);

30 
Page
* 
gë_∑ge
(
TabÀ
 *
èbÀ
, 
∑gíum_t
 
∑gíum
, * 
buf_∑ge_i
);

32 
ªÀa£_hódî_∑ge
(
TabÀ
 *
èbÀ
);

34 
ªÀa£_∑ge
(
Page
* 
∑ge
);

36 
ªÀa£_∑ge
(
Page
* 
∑ge
, * 
buf_∑ge_i
);

38 
£t_dúty_∑ge
(
Page
* 
∑ge
);

40 
‰ì_∑ge
(
TabÀ
 *
èbÀ
, 
Page
* 
∑ge
);

42 
Êush_èbÀ
(
TabÀ
 *
èbÀ
);

44 
öô_buf_poﬁ
(
num_buf
);

46 
de°roy_buf_poﬁ
();

48 
¥öt_buf_poﬁ
();

50 
	#BUF_PAGE_MUTEX_FAIL
 -930209

	)

51 
	#BUF_POOL_MUTEX_ENTER
 do {\

52 
°d
::
unique_lock
<°d::
muãx
> 
	`buf_poﬁ_œtch
(
poﬁ
.
buf_poﬁ_muãx
);\

53 } 0);

	)

55 
	#BUF_PAGE_MUTEX_ENTER
(
i
)\

56 
boﬁ
 
ªt
 = 
poﬁ
.
buf_∑ge_muãx
[
i
].
	`åy_lock
();

	)

	@include/deadlock.h

1 #i‚de‡
__DEADLOCK__H__


2 
	#__DEADLOCK__H__


	)

4 
	~<un‹dîed_m≠
>

5 
	~<ve˘‹
>

6 
	~<°ack
>

7 
	~<Æg‹ôhm
>

8 
	~<∑nic.h
>

10 ˛as†
	cDLCheckî
 {

11 
	sèrj™_t
 {

12 
èrj™_t
(){};

13 
èrj™_t
(
waô_f‹
Ë: 
waôög_åx_id
(waô_f‹), 
föished
(
Ál£
), 
dfs_‹dî
(-1) {};

14 
	mwaôög_åx_id
;

15 
boﬁ
 
	mföished
;

16 
	mdfs_‹dî
;

19 
	g¥iv©e
:

20 
°d
::
°ack
<
èrj™_t
*> 
s_èrj™
;

21 
	gdfs_‹dî
;

22 
boﬁ
 
	gcy˛e_Êag
;

23 
	gœã°_åx_id
;

25 
dfs_èrj™
(
èrj™_t
* 
°
);

26 
öôülize_èrj™_acy˛ic
();

27 
öôülize_èrj™_cy˛ic
();

30 
	g°d
::
un‹dîed_m≠
<, 
	gèrj™_t
> 
	gdl_gøph
;

31 
boﬁ
 
is_cy˛ic
 ();

33 
	gpublic
:

34 
	$DLCheckî
(): 
	`dfs_‹dî
(-1), 
	`cy˛e_Êag
(
Ál£
), 
	$œã°_åx_id
(0Ë{
	}
};

35 ~
	$DLCheckî
(){
	}
};

37 
boﬁ
 
ch™ge_waôög_f‹
(
åx_id
, 
waô_f‹
);

38 
boﬁ
 
dódlock_checkög
(
åx_id
, 
waô_f‹
);

39 
dñëe_waôög_f‹_åx
(
åx_id
);

	@include/file.h

1 #i‚de‡
__FILE_H__


2 
	#__FILE_H__


	)

3 
	~"èbÀ.h
"

4 
	~"∑ge.h
"

7 
ex∑nd_fûe
(
TabÀ
 *
èbÀ
, 
size_t
 
˙t_∑ge_to_ex∑nd
);

10 
fûe_ªad_∑ge
(
TabÀ
 *
èbÀ
, 
∑gíum_t
 
∑gíum
, * 
∑ge
);

13 
fûe_wrôe_∑ge
(
TabÀ
 *
èbÀ
, 
∑gíum_t
 
∑gíum
, * 
∑ge
);

	@include/lock.h

1 #i‚de‡
__LOCK_HPP__


2 
	#__LOCK_HPP__


	)

4 
	~<un‹dîed_m≠
>

5 
	~<li°
>

6 
	~<muãx
>

7 
	~<c⁄dôi⁄_v¨übÀ
>

8 
	~<ve˘‹
>

9 
	~<un‹dîed_£t
>

11 
	~"∑ge.h
"

12 
	~"èbÀ.h
"

13 
	~"åx.h
"

14 
	~"ty≥s.h
"

15 
	~"∑nic.h
"

16 
	~"dódlock.h
"

18 
Tønß˘i⁄M™agî
 
åx_sys
;

20 
	slock_t
 {

21 
lock_t
(
èbÀ_id
, 
åx_id_t
 
åx_id
, 
∑gíum_t
 
∑ge_id
, 
öt64_t
 
key
, 
LockMode
 
lock_mode
, 
buf_∑ge_i
,Üock_t* 
waô_lock
) :

22 
èbÀ_id
—abÀ_id), 
åx_id
—rx_id), 
∑ge_id
’age_id), 
key
(key), 
lock_mode
÷ock_mode), 
buf_∑ge_i
(buf_page_i),

23 
¥ev
(
nuŒ±r
), 
√xt
“uŒ±rË,
waô_lock
(wait_lock) {};

24 
	mèbÀ_id
;

25 
åx_id_t
 
	måx_id
;

26 
∑gíum_t
 
	m∑ge_id
;

27 
öt64_t
 
	mkey
;

28 
boﬁ
 
	macquúed
;

29 
LockMode
 
	mlock_mode
;

30 
	mbuf_∑ge_i
;

32 
lock_t
* 
	m¥ev
;

33 
lock_t
* 
	m√xt
;

35 
lock_t
* 
	mwaô_lock
;

37 } 
	tlock_t
;

39 
	slock_∑ge_t
 {

40 
	m°d
::
li°
<
lock_t
> 
lock_li°
;

41 } 
	tlock_∑ge_t
;

43 ˛as†
	cLockM™agî
 {

44 íum {
	mLOCK_WAITING
, 
	mLOCK_GRANTED_PUSH
, 
	mLOCK_GRANTED_NO_PUSH
} 
	tLOCK_REQ_STATE
;

46 
	g¥iv©e
:

47 
DLCheckî
 
dl_checkî
;

48 
	g°d
::
muãx
 
lock_sys_muãx
;

53 
	g°d
::
un‹dîed_m≠
<
∑gíum_t
, 
	glock_∑ge_t
> 
	glock_èbÀ
;

55 
boﬁ
 
ªÀa£_lock_ab‹ãd
(
åx_t
*);

56 
	gpublic
:

58 
	$LockM™agî
(){
	}
};

59 ~
	$LockM™agî
(){
	}
};

64 
boﬁ
 
acquúe_lock
(
åx_t
*, 
èbÀ_id
, 
∑gíum_t
, 
öt64_t
 
key
, 
LockMode
 
lock_mode
, 
buf_∑ge_i
);

65 
ªÀa£_lock_low
(
åx_t
*, 
lock_t
*);

66 
boﬁ
 
ªÀa£_lock
(
åx_t
*);

69 
	#LOCK_SYS_MUTEX_ENTER
 \

70 
°d
::
unique_lock
<°d::
muãx
> 
	`l_muãx
(
lock_sys_muãx
);

	)

72 
	#MAKE_LOCK_REQUEST_WAIT
 \

73 
lock_t
 
lock_ªq
{
èbÀ_id
, 
åx
->
	`gëTønß˘i⁄Id
(), 
∑ge_id
, 
key
, 
mode
, 
buf_∑ge_i
, 
waô_lock
};\

74 
lock_èbÀ
[
∑ge_id
].
lock_li°
.
	`push_back
(
lock_ªq
);\

75 
lock_±r
 = &(
lock_èbÀ
[
∑ge_id
].
lock_li°
.
	`back
());\

76 if(
¥ev_‹_own_lock_±r
) {\

77 
lock_±r
 -> 
¥ev
 = 
¥ev_‹_own_lock_±r
;\

78 
¥ev_‹_own_lock_±r
 -> 
√xt
 = 
lock_±r
;\

79 }

	)

81 
	#MAKE_LOCK_REQUEST_GRANTED
 \

82 
lock_t
 
lock_ªq
{
èbÀ_id
, 
åx
->
	`gëTønß˘i⁄Id
(), 
∑ge_id
, 
key
, 
mode
, 
buf_∑ge_i
, 
nuŒ±r
};\

83 
lock_èbÀ
[
∑ge_id
].
lock_li°
.
	`push_back
(
lock_ªq
);\

84 
lock_±r
 = &(
lock_èbÀ
[
∑ge_id
].
lock_li°
.
	`back
());\

85 if(
¥ev_‹_own_lock_±r
) {\

86 
lock_±r
 -> 
¥ev
 = 
¥ev_‹_own_lock_±r
;\

87 
¥ev_‹_own_lock_±r
 -> 
√xt
 = 
lock_±r
;\

88 }

	)

	@include/page.h

1 #i‚de‡
__PAGE_H__


2 
	#__PAGE_H__


	)

3 
	~<°ddef.h
>

4 
	~<°dboﬁ.h
>

5 
	~<öây≥s.h
>

7 
	#BPTREE_INTERNAL_ORDER
 249

	)

8 
	#BPTREE_LEAF_ORDER
 32

	)

10 
	#PAGE_SIZE
 4096

	)

12 
	#SIZE_KEY
 8

	)

13 
	#SIZE_COLUMN
 15

	)

14 
	#SIZE_VALUE
 120

	)

15 
	#SIZE_RECORD
 (
SIZE_KEY
 + 
SIZE_VALUE
)

	)

17 
	#BPTREE_MAX_NODE
 (1024 * 1024)

18 

	)

19 
uöt64_t
 
	t∑gíum_t
;

20 
	#PAGENUM_TO_FILEOFF
(
pgnum
Ë(’gnumË* 
PAGE_SIZE
)

	)

21 
	#FILEOFF_TO_PAGENUM
(
off
Ë((
∑gíum_t
)((offË/ 
PAGE_SIZE
))

	)

33 
	s_Rec‹d
 {

34 
öt64_t
 
	mkey
;

35 
öt64_t
 
	mvÆue
[
SIZE_COLUMN
];

36 } 
	tRec‹d
;

38 
	s_I¡î«lRec‹d
 {

39 
öt64_t
 
	mkey
;

40 
off_t
 
	moff£t
;

41 } 
	tI¡î«lRec‹d
;

43 
	#INMEM_PAGE
 \

44 
èbÀ_id
; \

45 
∑gíum_t
 
∑gíum
; \

46 
boﬁ
 
is_dúty
; \

47 
pö˙t
; \

48 
_Page
* 
Ãu_√xt
; \

49 
_Page
* 
Ãu_¥ev


	)

51 
	s_Page
 {

52 
	mbyãs
[
PAGE_SIZE
];

55 
	mINMEM_PAGE
;

56 } 
	tPage
;

58 
	s_FªePage
 {

59 
off_t
 
	m√xt
;

60 
	mª£rved
[
PAGE_SIZE
 - 8];

63 
	mINMEM_PAGE
;

64 } 
	tFªePage
;

66 
	s_HódîPage
 {

67 
off_t
 
	m‰ìli°
;

68 
off_t
 
	mroŸ_off£t
;

69 
uöt64_t
 
	mnum_∑ges
;

70 
off_t
 
	mnum_cﬁumn
;

71 
	mª£rved
[
PAGE_SIZE
 - 32];

74 
	mINMEM_PAGE
;

75 } 
	tHódîPage
;

77 
	#INTERNAL_KEY
(
n
, 
i
Ë(“)->
úec‹ds
[(i)+1].
key
)

	)

78 
	#INTERNAL_OFFSET
(
n
, 
i
Ë(“)->
úec‹ds
[(i)].
off£t
)

	)

79 
	s_I¡î«lPage
 {

82 
off_t
 
	m∑ª¡
;

83 
	mis_Àaf
;

84 
	mnum_keys
;

85 
	mª£rved
[112 - 16];

86 
I¡î«lRec‹d
 
	múec‹ds
[
BPTREE_INTERNAL_ORDER
];

88 
	m•a˚
[
PAGE_SIZE
];

91 
	mINMEM_PAGE
;

92 } 
	tI¡î«lPage
;

94 
	#LEAF_KEY
(
n
, 
i
Ë(“)->
ªc‹ds
[(i)].
key
)

	)

95 
	#LEAF_VALUE
(
n
, 
i
Ë(“)->
ªc‹ds
[(i)].
vÆue
)

	)

96 
	s_LófPage
 {

99 
off_t
 
	m∑ª¡
;

100 
	mis_Àaf
;

101 
	mnum_keys
;

102 
	mª£rved
[120 - 16];

103 
off_t
 
	msiblög
;

104 
Rec‹d
 
	mªc‹ds
[
BPTREE_LEAF_ORDER
-1];

106 
	m•a˚
[
PAGE_SIZE
];

110 
	mINMEM_PAGE
;

111 } 
	tLófPage
;

113 
	s_NodePage
 {

116 
off_t
 
	m∑ª¡
;

117 
	mis_Àaf
;

118 
	mnum_keys
;

120 
	m•a˚
[
PAGE_SIZE
];

124 
	mINMEM_PAGE
;

125 } 
	tNodePage
;

	@include/panic.h

1 #i‚de‡
__PANIC_H__


2 
	#__PANIC_H__


	)

3 
	~<°dio.h
>

5 
	#PANIC
(
msg
,...) do{\

6 
	`Ârötf
(
°dîr
, "PANIC: [%s:%d i¿%s] " 
msg
 "\n", \

7 
__FILE__
, 
__LINE__
, 
__func__
 , ##
__VA_ARGS__
); \

8 
	`exô
(
EXIT_FAILURE
); \

9 }0)

	)

	@include/table.h

1 #i‚de‡
__TABLE_H__


2 
	#__TABLE_H__


	)

4 
	~"∑ge.h
"

6 
	~"åx.h
"

7 
	~"lock.h
"

9 
	s_TabÀ
 {

10 
HódîPage
 
	mdbhódî
;

11 
	mdbfûe
;

12 
	mèbÀ_id
;

14 } 
	tTabÀ
;

16 
	#MAX_NUM_TABLE
 10

	)

19 
›í_‹_¸óã_èbÀ_fûe
(c⁄° * 
fûíame
, 
num_cﬁumn
);

21 
˛o£_èbÀ_fûe
(
TabÀ
 *
èbÀ
);

24 
TabÀ
 *
gë_èbÀ
(
èbÀ_id
);

	@include/trx.h

2 #i‚de‡
__TRX_HPP__


3 
	#__TRX_HPP__


	)

5 
	~<li°
>

6 
	~<un‹dîed_m≠
>

7 
	~<©omic
>

8 
	~<muãx
>

9 
	~<c⁄dôi⁄_v¨übÀ
>

10 
	~"ty≥s.h
"

12 
˛ass
 
	gLockM™agî
;

13 
	glock_t
;

15 ˛as†
	cåx_t
 {

16 
	m¥iv©e
:

18 
åx_id
;

20 
	m°d
::
li°
<
lock_t
*> 
acquúed_lock
;

21 
	m°d
::
c⁄dôi⁄_v¨übÀ
 
åx_t_cv
;

22 
Sèã
 
	m°©e
;

24 
	mpublic
:

25 
	$åx_t
(
åx_id_t
 
t_id
Ë: 
	`åx_id
—_idË, 
	$°©e
(
RUNNING
) {};

26 ~
	$åx_t
(){
	}
};

29 
	$push_acquúed_lock
(
lock_t
* 
lock
Ë{ 
acquúed_lock
.
	`push_back
÷ock); 
	}
}

30 
	$p›_Æl_acquúed_lock
(Ë{ 
acquúed_lock
.
	`˛ór
(); 
	}
}

31 
	$£tSèã
(
Sèã
 
°©e
Ë{ 
this
->°©ê°©e; 
	}
}

33 c⁄° 
	g°d
::
li°
<
lock_t
*> 
	$gëAcquúedLock
 (Ëc⁄° {  
acquúed_lock
; 
	}
}

34 c⁄° 
Sèã
 
	$gëSèã
(Ëc⁄° {  
°©e
; 
	}
}

35 c⁄° 
åx_id_t
 
	$gëTønß˘i⁄Id
 (Ëc⁄° {  
åx_id
; 
	}
}

36 
	g°d
::
c⁄dôi⁄_v¨übÀ
* 
	$gëCV
(Ë{  &
åx_t_cv
; 
	}
}

40 ˛as†
	cTønß˘i⁄M™agî
 {

42 
	m¥iv©e
:

43 
°d
::
un‹dîed_m≠
<
åx_id_t
, 
	måx_t
*> 
	ma˘ive_åx
;

44 
	m°d
::
©omic
<> 
åx_id
;

46 
	mpublic
:

47 
	$Tønß˘i⁄M™agî
():
	$åx_id
(0) {};

49 ~
	`Tønß˘i⁄M™agî
();

51 
åx_t
* 
	`makeNewTønß˘i⁄
();

52 
boﬁ
 
	`dñëeTønß˘i⁄
(
åx_id_t
);

54 
°d
::
un‹dîed_m≠
<
åx_id_t
, 
åx_t
*> 
	$gëA˘iveTrx
(Ëc⁄° {  
a˘ive_åx
; 
	}
}

55 
åx_t
* 
gëTønß˘i⁄
(
åx_id_t
 
åx_id
);

	@include/types.h

1 #i‚de‡
__TYPES_H__


2 
	#__TYPES_H__


	)

4 
	#NONE
 0

	)

5 
	#RUNNING
 1

	)

6 
	#ABORTED
 2

	)

8 
	#LOCK_S
 0

	)

9 
	#LOCK_X
 1

	)

11 
	tåx_id_t
;

12 
	tSèã
;

13 
	tLockMode
;

	@src/bpt_ext.cpp

1 
	~"b±_öã∫Æ.h
"

4 
	$öô_db
(
num_buf
) {

5  
	`öô_buf_poﬁ
(
num_buf
);

6 
	}
}

8 
	$shutdown_db
() {

9  
	`de°roy_buf_poﬁ
();

10 
	}
}

13 
	$›í_èbÀ
(* 
fûíame
, 
num_cﬁumn
) {

14  
	`›í_‹_¸óã_èbÀ_fûe
(
fûíame
, 
num_cﬁumn
);

15 
	}
}

18 
	$˛o£_èbÀ
(
èbÀ_id
) {

19 
TabÀ
* 
èbÀ
 = 
	`gë_èbÀ
(
èbÀ_id
);

20 
	`Êush_èbÀ
(
èbÀ
);

21  
	`˛o£_èbÀ_fûe
(
èbÀ
);

22 
	}
}

28 
	$ö£π
(
èbÀ_id
, 
öt64_t
 
key
, i¡64_t* 
vÆue
) {

29 
TabÀ
* 
èbÀ
 = 
	`gë_èbÀ
(
èbÀ_id
);

30  
	`ö£π_ªc‹d
(
èbÀ
, 
key
, 
vÆue
);

31 
	}
}

35 
	$ªmove
(
èbÀ_id
, 
öt64_t
 
key
) {

36 
TabÀ
* 
èbÀ
 = 
	`gë_èbÀ
(
èbÀ_id
);

37  
	`dñëe_ªc‹d
(
èbÀ
, 
key
);

38 
	}
}

42 
öt64_t
* 
	$föd
(
èbÀ_id
, 
öt64_t
 
key
) {

43 
TabÀ
* 
èbÀ
 = 
	`gë_èbÀ
(
èbÀ_id
);

45  
	`föd_ªc‹d
(
èbÀ
, 
key
);

46 
	}
}

48 
öt64_t
* 
	$föd
(
èbÀ_id
, 
öt64_t
 
key
, 
åx_id
, * 
ªsu…
) {

49 
TabÀ
* 
èbÀ
 = 
	`gë_èbÀ
(
èbÀ_id
);

50 
Tønß˘i⁄M™agî
* 
tm
 = &
åx_sys
;

51 
åx_t
* 
åx
 = 
tm
 -> 
	`gëTønß˘i⁄
(
åx_id
);

53 i‡(
åx
 -> 
	`gëSèã
(Ë=
ABORTED
) {

54 *
ªsu…
 = 0;

55  
nuŒ±r
;

58 
öt64_t
* 
ªt
 = 
	`föd_ªc‹d
(
èbÀ
, 
key
, 
åx
);

60 i‡(
åx
 -> 
	`gëSèã
(Ë=
ABORTED
) {

61 *
ªsu…
 = 0;

62  
nuŒ±r
;

65 *
ªsu…
 = 1;

66  
ªt
;

67 
	}
}

71 
	$upd©e
(
èbÀ_id
, 
öt64_t
 
key
, i¡64_t* 
vÆue
, 
åx_id
, * 
ªsu…
) {

72 
TabÀ
* 
èbÀ
 = 
	`gë_èbÀ
(
èbÀ_id
);

73 
Tønß˘i⁄M™agî
* 
tm
 = &
åx_sys
;

75 
åx_t
* 
åx
 = 
tm
 -> 
	`gëTønß˘i⁄
(
åx_id
);

77 i‡(
åx
 -> 
	`gëSèã
(Ë=
ABORTED
) {

78 *
ªsu…
 = 0;

82 
ªt
 = 
	`upd©e_ªc‹d
(
èbÀ
, 
key
, 
vÆue
, 
åx
);

84 i‡(
åx
 -> 
	`gëSèã
(Ë=
ABORTED
) {

85 *
ªsu…
 = 0;

89  
ªt
;

90 
	}
}

96 
	$begö_tx
() {

97 
Tønß˘i⁄M™agî
* 
tm
 = &
åx_sys
;

98 
åx_t
* 
√w_t
 = 
tm
 -> 
	`makeNewTønß˘i⁄
();

99  
√w_t
 -> 
	`gëTønß˘i⁄Id
();

100 
	}
}

108 
	$íd_tx
(
åx_id
) {

109 
Tønß˘i⁄M™agî
* 
tm
 = &
åx_sys
;

110 
LockM™agî
* 
lm
 = &
lock_sys
;

112 
åx_t
* 
íd_t
 = 
tm
 -> 
	`gëTønß˘i⁄
(
åx_id
);

113 
boﬁ
 
ªt
;

114 i‡(
íd_t
 -> 
	`gëSèã
(Ë=
ABORTED
) {

115 
ªt
 = 
tm
->
	`dñëeTønß˘i⁄
(
åx_id
);

117 
íd_t
 -> 
	`£tSèã
(
NONE
);

118 
ªt
 = 
lm
->
	`ªÀa£_lock
(
íd_t
Ë&& 
tm
 -> 
	`dñëeTønß˘i⁄
(
åx_id
);

120 i‡(!
ªt
)

121 
	`PANIC
("end_tx.\n");

124 
	}
}

135 
	$¥öt_åì
(
èbÀ_id
) {

136 
off_t
* 
queue
;

137 
i
;

138 
‰⁄t
 = 0;

139 
ª¨
 = 0;

141 
TabÀ
* 
èbÀ
 = 
	`gë_èbÀ
(
èbÀ_id
);

143 
	`¥öt_buf_poﬁ
();

144 i‡(
èbÀ
->
dbhódî
.
roŸ_off£t
 == 0) {

145 
	`¥ötf
("EmptyÅree.\n");

148 
queue
 = (
off_t
*)
	`mÆloc
((off_tË* 
BPTREE_MAX_NODE
);

150 
queue
[
ª¨
] = 
èbÀ
->
dbhódî
.
roŸ_off£t
;

151 
ª¨
++;

152 
queue
[
ª¨
] = 0;

153 
ª¨
++;

154 
‰⁄t
 < 
ª¨
) {

155 
off_t
 
∑ge_off£t
 = 
queue
[
‰⁄t
];

156 
‰⁄t
++;

158 i‡(
∑ge_off£t
 == 0) {

159 
	`¥ötf
("\n");

161 i‡(
‰⁄t
 =
ª¨
) ;

164 
queue
[
ª¨
] = 0;

165 
ª¨
++;

169 
NodePage
* 
node_∑ge
;

170 
node_∑ge
 = (
NodePage
*)
	`gë_∑ge
(
èbÀ
, 
	`FILEOFF_TO_PAGENUM
(
∑ge_off£t
));

171 i‡(
node_∑ge
->
is_Àaf
 == 1) {

173 
LófPage
* 
Àaf_node
 = (LófPage*)
node_∑ge
;

174 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

175 
	`¥ötf
("%" 
PRIu64
 " ", 
	`LEAF_KEY
(
Àaf_node
, 
i
));

177 
	`¥ötf
("| ");

180 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)
node_∑ge
;

181 
i
 = 0; i < 
öã∫Æ_node
->
num_keys
; i++) {

182 
	`¥ötf
("%" 
PRIu64
 " ", 
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
));

183 
queue
[
ª¨
] = 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
);

184 
NodePage
* 
chûd_node
 = (NodePage*Ë
	`gë_∑ge
(
èbÀ
,

185 
	`FILEOFF_TO_PAGENUM
(
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
)));

186 i‡(
chûd_node
->
∑ª¡
 !
∑ge_off£t
){

187 
	`PANIC
("btree structure crashed");

189 
	`ªÀa£_∑ge
((
Page
*)
chûd_node
);

190 
ª¨
++;

192 
queue
[
ª¨
] = 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
);

193 
ª¨
++;

194 
	`¥ötf
("| ");

196 
	`ªÀa£_∑ge
((
Page
*)
node_∑ge
);

198 
	`‰ì
(
queue
);

199 
	}
}

204 
	$föd_™d_¥öt
(
èbÀ_id
, 
öt64_t
 
key
) {

205 
öt64_t
* 
vÆue_found
 = 
NULL
;

206 
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
);

207 i‡(
vÆue_found
 =
NULL
) {

208 
	`¥ötf
("Rec‹dÇŸ found undî key %" 
PRIu64
 ".\n", 
key
);

212 
	`‰ì
(
vÆue_found
);

214 
	}
}

218 
	$li˚n£_nŸi˚
( ) {

219 
	`¥ötf
("bpt version %s -- Copyright (C) 2010 Amittai Aviram "

220 "hâp://www.amôèi.com\n", 
Vîsi⁄
);

221 
	`¥ötf
("ThisÖrogram comes with ABSOLUTELY NO WARRANTY; for details "

225 
	}
}

229 
	$¥öt_li˚n£
–
li˚n£_∑π
 ) {

230 
°¨t
, 
íd
, 
löe
;

231 
FILE
 * 
Â
;

232 
buf„r
[0x100];

234 
li˚n£_∑π
) {

235 
LICENSE_WARRANTEE
:

236 
°¨t
 = 
LICENSE_WARRANTEE_START
;

237 
íd
 = 
LICENSE_WARRANTEE_END
;

239 
LICENSE_CONDITIONS
:

240 
°¨t
 = 
LICENSE_CONDITIONS_START
;

241 
íd
 = 
LICENSE_CONDITIONS_END
;

247 
Â
 = 
	`f›í
(
LICENSE_FILE
, "r");

248 i‡(
Â
 =
NULL
) {

249 
	`≥º‹
("print_license: fopen");

250 
	`exô
(
EXIT_FAILURE
);

252 
löe
 = 0;Üöê< 
°¨t
;Üine++)

253 
	`fgës
(
buf„r
, (buf„r), 
Â
);

254  ; 
löe
 < 
íd
;Üine++) {

255 
	`fgës
(
buf„r
, (buf„r), 
Â
);

256 
	`¥ötf
("%s", 
buf„r
);

258 
	`f˛o£
(
Â
);

259 
	}
}

263 
	$ußge_1
( ) {

264 
	`¥ötf
("B+ Tªêo‡Ordî %d(I¡î«l).\n", 
‹dî_öã∫Æ
);

265 
	`¥ötf
("Following Silberschatz, Korth, Sidarshan, Database Concepts, "

267 
	}
}

271 
	$ußge_2
( ) {

272 
	`¥ötf
("Enterány ofÅhe following commandsáfterÅheÖrompt > :\n"

281 
	}
}

	@src/buf.cpp

1 
	~<sys/ty≥s.h
>

2 
	~<f˙é.h
>

3 
	~<°dlib.h
>

4 
	~<as£π.h
>

5 
	~<°dio.h
>

6 
	~<uni°d.h
>

7 
	~<°rög.h
>

8 
	~"∑ge.h
"

9 
	~"fûe.h
"

10 
	~"buf.h
"

11 
	~"∑nic.h
"

13 
BufPoﬁ
 
	gpoﬁ
;

17 
	$Êush_∑ge
(
Page
* 
∑ge
) {

18 
	`fûe_wrôe_∑ge
(
	`gë_èbÀ
(
∑ge
->
èbÀ_id
),Öage->
∑gíum
,Öage);

19 
∑ge
->
is_dúty
 = 
Ál£
;

20 
	}
}

24 
	$p›_‰om_Ãu
(
Page
* 
∑ge
){

25 i‡(
∑ge
 =
poﬁ
.
Ãu_hód
 ||Öagê=poﬁ.
Ãu_èû
){

26 i‡(
∑ge
 =
poﬁ
.
Ãu_hód
){

27 
poﬁ
.
Ãu_hód
 = 
∑ge
->
Ãu_√xt
;

28 i‡(
∑ge
->
Ãu_√xt
)

29 
∑ge
->
Ãu_√xt
->
Ãu_¥ev
 = 
NULL
;

31 i‡(
∑ge
 =
poﬁ
.
Ãu_èû
){

32 
poﬁ
.
Ãu_èû
 = 
∑ge
->
Ãu_¥ev
;

33 i‡(
∑ge
->
Ãu_¥ev
)

34 
∑ge
->
Ãu_¥ev
->
Ãu_√xt
 = 
NULL
;

38 
∑ge
->
Ãu_¥ev
->
Ãu_√xt
 =Öage->lru_next;

39 
∑ge
->
Ãu_√xt
->
Ãu_¥ev
 =Öage->lru_prev;

42 
∑ge
->
Ãu_¥ev
 =Öage->
Ãu_√xt
 = 
NULL
;

44 
	}
}

48 
	$push_to_Ãu
(
Page
* 
∑ge
){

49 
∑ge
->
Ãu_√xt
 = 
poﬁ
.
Ãu_hód
;

50 i‡(
∑ge
->
Ãu_√xt
){

51 
∑ge
->
Ãu_√xt
->
Ãu_¥ev
 =Öage;

53 
∑ge
->
Ãu_¥ev
 = 
NULL
;

54 
poﬁ
.
Ãu_hód
 = 
∑ge
;

55 i‡(
poﬁ
.
Ãu_èû
 =
NULL
){

56 
poﬁ
.
Ãu_èû
 = 
∑ge
;

58 
	}
}

62 
Page
* 
	$evi˘_∑ge
(){

63 
Page
* 
∑ge
 = 
poﬁ
.
Ãu_èû
;

64 
∑ge
 !
NULL
){

65 i‡(
∑ge
->
pö˙t
 != 0){

66 
∑ge
 =Öage->
Ãu_¥ev
;

69 
	`p›_‰om_Ãu
(
∑ge
);

70 i‡(
∑ge
->
is_dúty
)

71 
	`Êush_∑ge
(
∑ge
);

72 
∑ge
->
Ãu_√xt
 =Öage->
Ãu_¥ev
 = 
NULL
;

73  
∑ge
;

75 
	`PANIC
("evict_page");

76 
	`exô
(1);

77 
	}
}

81 
	$upd©e_Ãu
(
Page
* 
∑ge
){

82 
	`p›_‰om_Ãu
(
∑ge
);

83 
	`push_to_Ãu
(
∑ge
);

84 
	}
}

88 
	$öô_√w_hódî_∑ge
(
HódîPage
* 
hódî
, 
èbÀ_id
, 
num_cﬁumn
) {

89 
	`mem£t
(
hódî
, 0, (
HódîPage
));

91 
hódî
->
èbÀ_id
 =Åable_id;

92 
hódî
->
∑gíum
 = 0;

93 
hódî
->
‰ìli°
 = 0;

94 
hódî
->
roŸ_off£t
 = 0;

95 
hódî
->
num_cﬁumn
 =Çum_column;

96 
hódî
->
num_∑ges
 = 1;

97 
	`£t_dúty_∑ge
((
Page
*)
hódî
);

98 
hódî
->
pö˙t
++;

99 
poﬁ
.
tŸ_pö˙t
++;

100 
	}
}

104 
	$lﬂd_hódî_∑ge
(
TabÀ
* 
èbÀ
) {

105 
	`fûe_ªad_∑ge
(
èbÀ
, 0, &èbÀ->
dbhódî
);

106 
èbÀ
->
dbhódî
.
èbÀ_id
 =Åable->table_id;

107 
èbÀ
->
dbhódî
.
∑gíum
 = 0;

108 
èbÀ
->
dbhódî
.
is_dúty
 = 
Ál£
;

109 
èbÀ
->
dbhódî
.
pö˙t
 = 1;

110 
èbÀ
->
dbhódî
.
Ãu_√xt
 = 
NULL
;

111 
èbÀ
->
dbhódî
.
Ãu_¥ev
 = 
NULL
;

112 
poﬁ
.
tŸ_pö˙t
++;

113 
	}
}

117 
Page
* 
	$Æloc_∑ge
(
TabÀ
* 
èbÀ
) {

118 
∑gíum_t
 
∑gíum
 = 
	`FILEOFF_TO_PAGENUM
(
èbÀ
->
dbhódî
.
‰ìli°
);

119 
FªePage
* 
‰ì∑ge
;

120 i‡(
∑gíum
 == 0){

121 
	`ex∑nd_fûe
(
èbÀ
,ÅabÀ->
dbhódî
.
num_∑ges
);

122 
∑gíum
 = 
	`FILEOFF_TO_PAGENUM
(
èbÀ
->
dbhódî
.
‰ìli°
);

124 
‰ì∑ge
 = (
FªePage
*)
	`gë_∑ge
(
èbÀ
, 
∑gíum
);

125 
èbÀ
->
dbhódî
.
‰ìli°
 = 
‰ì∑ge
->
√xt
;

127 
	`£t_dúty_∑ge
((
Page
*)&
èbÀ
->
dbhódî
);

128 
	`mem£t
(
‰ì∑ge
, 0, 
PAGE_SIZE
);

130 
	`£t_dúty_∑ge
((
Page
*)
‰ì∑ge
);

131  (
Page
*)
‰ì∑ge
;

132 
	}
}

136 
Page
* 
	$gë_∑ge
(
TabÀ
* 
èbÀ
, 
∑gíum_t
 
∑gíum
) {

137 
Page
* 
√w_∑ge
 = 
NULL
;

138 
i
;

139 
i
 = 0; i < 
poﬁ
.
num_buf
; i++){

140 i‡(!
√w_∑ge
 && 
poﬁ
.
∑ges
[
i
].
èbÀ_id
 == 0){

141 
√w_∑ge
 = &
poﬁ
.
∑ges
[
i
];

143 i‡(
poﬁ
.
∑ges
[
i
].
èbÀ_id
 =
èbÀ
->table_id &&

144 
poﬁ
.
∑ges
[
i
].
∑gíum
 ==Öagenum){

145 
poﬁ
.
∑ges
[
i
].
pö˙t
++;

146 
poﬁ
.
tŸ_pö˙t
++;

147  &
poﬁ
.
∑ges
[
i
];

150 i‡(!
√w_∑ge
){

151 i‡((
√w_∑ge
 = 
	`evi˘_∑ge
()Ë=
NULL
){

152 
	`PANIC
("NotÉnough buffer\n");

154 i‡(
√w_∑ge
->
is_dúty
){

155 
	`Êush_∑ge
(
√w_∑ge
);

158 
	`fûe_ªad_∑ge
(
èbÀ
, 
∑gíum
, 
√w_∑ge
);

159 
√w_∑ge
->
èbÀ_id
 = 
èbÀ
->table_id;

160 
√w_∑ge
->
∑gíum
 =Öagenum;

161 
√w_∑ge
->
pö˙t
 = 1;

162 
poﬁ
.
tŸ_pö˙t
++;

163 
	`push_to_Ãu
(
√w_∑ge
);

164  
√w_∑ge
;

165 
	}
}

171 
Page
* 
	$gë_∑ge
(
TabÀ
* 
èbÀ
, 
∑gíum_t
 
∑gíum
, * 
buf_∑ge_i
) {

172 
Page
* 
√w_∑ge
 = 
NULL
;

173 
i
;

174 
√w_∑ge_i
 = 0;

175 
i
 = 0; i < 
poﬁ
.
num_buf
; i++){

176 i‡(!
√w_∑ge
 && 
poﬁ
.
∑ges
[
i
].
èbÀ_id
 == 0){

177 
√w_∑ge
 = &
poﬁ
.
∑ges
[
i
];

178 
√w_∑ge_i
 = 
i
;

180 i‡(
poﬁ
.
∑ges
[
i
].
èbÀ_id
 =
èbÀ
->table_id &&

181 
poﬁ
.
∑ges
[
i
].
∑gíum
 ==Öagenum){

183 
√w_∑ge
 = &
poﬁ
.
∑ges
[
i
];

184 i‡(((
LófPage
*)
√w_∑ge
Ë-> 
is_Àaf
) {

185 
	`BUF_PAGE_MUTEX_ENTER
(
i
);

187 i‡(
ªt
) {

188 *
buf_∑ge_i
 = 
i
;

189 
poﬁ
.
∑ges
[
i
].
pö˙t
++;

190 
poﬁ
.
tŸ_pö˙t
++;

191  &
poﬁ
.
∑ges
[
i
];

194  
nuŒ±r
;

197 
poﬁ
.
∑ges
[
i
].
pö˙t
++;

198 
poﬁ
.
tŸ_pö˙t
++;

199  &
poﬁ
.
∑ges
[
i
];

204 i‡(!
√w_∑ge
){

205 i‡((
√w_∑ge
 = 
	`evi˘_∑ge
()Ë=
NULL
){

206 
	`PANIC
("NotÉnough buffer\n");

208 i‡(
√w_∑ge
->
is_dúty
){

209 
	`Êush_∑ge
(
√w_∑ge
);

212 
	`BUF_PAGE_MUTEX_ENTER
(
i
);

213 i‡(!
ªt
)

214 
	`PANIC
("EvictedÖage holdÅheÜatch\n");

216 
	`fûe_ªad_∑ge
(
èbÀ
, 
∑gíum
, 
√w_∑ge
);

217 
√w_∑ge
->
èbÀ_id
 = 
èbÀ
->table_id;

218 
√w_∑ge
->
∑gíum
 =Öagenum;

219 
√w_∑ge
->
pö˙t
 = 1;

220 
poﬁ
.
tŸ_pö˙t
++;

221 *
buf_∑ge_i
 = 
√w_∑ge_i
;

222 
	`push_to_Ãu
(
√w_∑ge
);

223  
√w_∑ge
;

224 
	}
}

229 
	$ªÀa£_hódî_∑ge
(
TabÀ
* 
èbÀ
) {

230 i‡(
èbÀ
->
dbhódî
.
is_dúty
){

231 
	`fûe_wrôe_∑ge
(
èbÀ
, 0, &èbÀ->
dbhódî
);

232 
èbÀ
->
dbhódî
.
is_dúty
 = 
Ál£
;

234 
	`mem£t
(&
èbÀ
->
dbhódî
, 0, (
HódîPage
));

235 
poﬁ
.
tŸ_pö˙t
--;

236 
	}
}

240 
	$ªÀa£_∑ge
(
Page
* 
∑ge
) {

241 
poﬁ
.
tŸ_pö˙t
--;

242 
∑ge
->
pö˙t
--;

243 
	}
}

248 
	$ªÀa£_∑ge
(
Page
* 
∑ge
, * 
buf_∑ge_i
) {

249 
poﬁ
.
tŸ_pö˙t
--;

250 
∑ge
->
pö˙t
--;

251 
poﬁ
.
buf_∑ge_muãx
[*
buf_∑ge_i
].
	`u∆ock
();

252 
	}
}

256 
	$£t_dúty_∑ge
(
Page
* 
∑ge
) {

257 
∑ge
->
is_dúty
 = 
åue
;

258 
	}
}

262 
	$‰ì_∑ge
(
TabÀ
* 
èbÀ
, 
Page
* 
∑ge
) {

263 
FªePage
* 
‰ì∑ge
 = (FªePage*)
∑ge
;

264 
	`mem£t
(
‰ì∑ge
, 0, 
PAGE_SIZE
);

265 
‰ì∑ge
->
√xt
 = 
èbÀ
->
dbhódî
.
‰ìli°
;

266 
	`£t_dúty_∑ge
(
∑ge
);

267 
èbÀ
->
dbhódî
.
‰ìli°
 = 
	`PAGENUM_TO_FILEOFF
(
‰ì∑ge
->
∑gíum
);

268 
	`£t_dúty_∑ge
((
Page
*)&
èbÀ
->
dbhódî
);

269 
	}
}

273 
	$Êush_èbÀ
(
TabÀ
* 
èbÀ
) {

274 
i
;

275 
i
 = 0; i < 
poﬁ
.
num_buf
; i++){

276 i‡(
poﬁ
.
∑ges
[
i
].
èbÀ_id
 =
èbÀ
->table_id &&

277 
poﬁ
.
∑ges
[
i
].
is_dúty
){

278 
	`Êush_∑ge
(&
poﬁ
.
∑ges
[
i
]);

281 
	}
}

285 
	$öô_buf_poﬁ
(
num_buf
) {

286 
poﬁ
.
∑ges
 = (
Page
*Ë
	`ˇŒoc
(
num_buf
, (Page));

287 
poﬁ
.
buf_∑ge_muãx
 = 
√w
 
°d
::
muãx
[
num_buf
];

289 
poﬁ
.
Ãu_hód
 = 
NULL
;

290 
poﬁ
.
Ãu_èû
 = 
NULL
;

291 
poﬁ
.
num_buf
 =Çum_buf;

292 
poﬁ
.
tŸ_pö˙t
 = 0;

294 
	}
}

298 
	$de°roy_buf_poﬁ
() {

299 
	`‰ì
(
poﬁ
.
∑ges
);

300 
dñëe
[] 
poﬁ
.
buf_∑ge_muãx
;

302 
poﬁ
.
∑ges
 = 
NULL
;

303 
poﬁ
.
Ãu_hód
 = 
NULL
;

304 
poﬁ
.
Ãu_èû
 = 
NULL
;

305 
poﬁ
.
num_buf
 = 0;

306 
poﬁ
.
tŸ_pö˙t
 = 0;

308 
	}
}

312 
	$¥öt_buf_poﬁ
() {

313 
	`¥ötf
("tŸÖö˙à%d\n", 
poﬁ
.
tŸ_pö˙t
);

314 
	}
}

	@src/deadlock.cpp

1 
	~"dódlock.h
"

3 
	gDLCheckî
::
	$öôülize_èrj™_acy˛ic
() {

4 !
s_èrj™
.
	`em±y
())

5 
s_èrj™
.
	`p›
();

7 
dfs_‹dî
 = -1;

8 
cy˛e_Êag
 = 
Ál£
;

10 autÿ
ô
 = 
dl_gøph
.
	`begö
(); ià!dl_gøph.
	`íd
(); ++it) {

11 (
ô
 -> 
£c⁄d
).
föished
 = 
Ál£
;

12 (
ô
 -> 
£c⁄d
).
dfs_‹dî
 = -1;

14 
	}
}

16 
	gDLCheckî
::
	$öôülize_èrj™_cy˛ic
() {

17 !
s_èrj™
.
	`em±y
())

18 
s_èrj™
.
	`p›
();

20 
dfs_‹dî
 = -1;

21 
cy˛e_Êag
 = 
Ál£
;

24 
dl_gøph
.
	`îa£
(
œã°_åx_id
);

26 
°d
::
ve˘‹
<> 
îa£_li°
;

27 autÿ
ô
 = 
dl_gøph
.
	`begö
(); ià!dl_gøph.
	`íd
(); ++it) {

28 i‡((
ô
 -> 
£c⁄d
).
waôög_åx_id
 =
œã°_åx_id
)

29 
îa£_li°
.
	`push_back
(
ô
->
fú°
);

32 (
ô
 -> 
£c⁄d
).
föished
 = 
Ál£
;

33 (
ô
 -> 
£c⁄d
).
dfs_‹dî
 = -1;

37 autÿ
i
 : 
îa£_li°
)

38 
dl_gøph
.
	`îa£
(
i
);

40 
	}
}

42 
	gDLCheckî
::
	$dfs_èrj™
(
èrj™_t
* 
cur
) {

43 
cur
->
dfs_‹dî
 = ++
this
->dfs_order;

44 
s_èrj™
.
	`push
(
cur
);

46 
mö_‹dî
 = 
cur
->
dfs_‹dî
;

48 i‡(
dl_gøph
.
	`cou¡
(
cur
->
waôög_åx_id
) != 0){

50 
èrj™_t
* 
√xt
 = &(
dl_gøph
[
cur
->
waôög_åx_id
]);

51 i‡(
√xt
->
dfs_‹dî
 == -1)

52 
mö_‹dî
 = 
°d
::
	`mö
(mö_‹dî, 
	`dfs_èrj™
(
√xt
));

53 i‡(!
√xt
->
föished
)

54 
mö_‹dî
 = 
°d
::
	`mö
(mö_‹dî, 
√xt
->
dfs_‹dî
);

57 i‡(
cy˛e_Êag
)

58  
INT_MAX
;

60 i‡(
mö_‹dî
 =
cur
->
dfs_‹dî
) {

61 
èrj™_t
* 
tmp
 = 
nuŒ±r
;

62 
˙t_size
 = 0;

64 i‡(
˙t_size
 == 1)

65 
cy˛e_Êag
 = 
åue
;

66 
˙t_size
++;

67 
tmp
 = 
s_èrj™
.
	`t›
();

68 
s_èrj™
.
	`p›
();

70 i‡(
cur
 =
tmp
)

74 
cur
 -> 
föished
 = 
åue
;

75  
mö_‹dî
;

76 
	}
}

81 
boﬁ
 
	gDLCheckî
::
	$is_cy˛ic
() {

82 autÿ
ô
 = 
dl_gøph
.
	`begö
(); ià!dl_gøph.
	`íd
(); ++it) {

84 i‡(
ô
->
£c⁄d
.
dfs_‹dî
 == -1)

85 
	`dfs_èrj™
(&(
ô
->
£c⁄d
));

87 i‡(
cy˛e_Êag
) {

88 
	`öôülize_èrj™_cy˛ic
();

89  
åue
;

93 
	`öôülize_èrj™_acy˛ic
();

94  
Ál£
;

95 
	}
}

100 
boﬁ
 
	gDLCheckî
::
	$dódlock_checkög
(
åx_id
, 
waô_f‹
) {

101 
èrj™_t
 
	`cur
(
waô_f‹
);

102 i‡(
dl_gøph
.
	`cou¡
(
åx_id
) != 0)

103 
	`PANIC
("In deadlock checking. TheÅransaction cannot wait for moreÅhan oneÅransaction.\n");

105 
dl_gøph
[
åx_id
] = 
cur
;

106 
œã°_åx_id
 = 
åx_id
;

108  
	`is_cy˛ic
();

109 
	}
}

111 
	gDLCheckî
::
	$dñëe_waôög_f‹_åx
(
åx_id
) {

112 
°d
::
ve˘‹
<> 
îa£_li°
;

114 autÿ
ô
 = 
dl_gøph
.
	`begö
(); ià!dl_gøph.
	`íd
(); ++it) {

115 i‡((
ô
 -> 
£c⁄d
).
waôög_åx_id
 =
åx_id
)

116 
îa£_li°
.
	`push_back
(
ô
 -> 
fú°
);

119 autÿ
i
 : 
îa£_li°
)

120 
dl_gøph
.
	`îa£
(
i
);

121 
	}
}

123 
boﬁ
 
	gDLCheckî
::
	$ch™ge_waôög_f‹
(
åx_id
, 
waô_f‹
) {

124 i‡(
dl_gøph
.
	`cou¡
(
åx_id
) == 0)

125 
	`PANIC
("In change_waiting_for. There isÇo wait forÜock.\n");

126 
èrj™_t
 
	`cur
(
waô_f‹
);

127 
dl_gøph
[
åx_id
] = 
cur
;

129 
œã°_åx_id
 = 
åx_id
;

131  
	`is_cy˛ic
();

132 
	}
}

	@src/delete.cpp

1 
	~"b±_öã∫Æ.h
"

9 
	$gë_√ighb‹_ödex
(
TabÀ
* 
èbÀ
, 
NodePage
* 
node_∑ge
) {

10 
i
;

15 
I¡î«lPage
* 
∑ª¡_node
;

16 
∑ª¡_node
 = (
I¡î«lPage
*)

17 
	`gë_∑ge
(
èbÀ
, 
	`FILEOFF_TO_PAGENUM
(
node_∑ge
->
∑ª¡
));

18 
i
 = 0; i <
∑ª¡_node
->
num_keys
; i++)

19 i‡(
	`INTERNAL_OFFSET
(
∑ª¡_node
, 
i
)

20 =
	`PAGENUM_TO_FILEOFF
(
node_∑ge
->
∑gíum
)){

21 
	`ªÀa£_∑ge
((
Page
*)
∑ª¡_node
);

22  
i
 - 1;

26 
	`PANIC
("Search forÇonexistentÖointerÅoÇode inÖarent.");

28 
	}
}

30 
	$ªmove_íåy_‰om_node
(
TabÀ
* 
èbÀ
, 
NodePage
* 
node_∑ge
, 
öt64_t
 
key
) {

31 
i
;

32 
key_idx
 = 0;

34 i‡(
node_∑ge
->
is_Àaf
) {

35 
LófPage
* 
Àaf_node
 = (LófPage*)
node_∑ge
;

38 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

39 i‡(
	`LEAF_KEY
(
Àaf_node
, 
i
Ë=
key
) {

40 
key_idx
 = 
i
;

44 i‡(
i
 =
Àaf_node
->
num_keys
) {

45 
	`PANIC
("remove_entry_from_node:Ço key inÅhisÖage");

49 
i
 = 
key_idx
; i < 
Àaf_node
->
num_keys
 - 1; i++) {

50 
	`LEAF_KEY
(
Àaf_node
, 
i
) = LEAF_KEY(leaf_node, i+1);

51 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
i
), LEAF_VALUE(leaf_node, i+1),

52 
SIZE_VALUE
);

55 
	`LEAF_KEY
(
Àaf_node
,Üóf_node->
num_keys
 - 1) = 0;

56 
	`mem£t
(
	`LEAF_VALUE
(
Àaf_node
,Üóf_node->
num_keys
 - 1), 0, 
SIZE_VALUE
);

58 
Àaf_node
->
num_keys
--;

60 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)
node_∑ge
;

63 
i
 = 0; i < 
öã∫Æ_node
->
num_keys
; i++) {

64 i‡(
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
Ë=
key
) {

65 
key_idx
 = 
i
;

69 i‡(
i
 =
öã∫Æ_node
->
num_keys
) {

70 
	`PANIC
("remove_entry_from_node:Ço key inÅhisÖage");

74 
i
 = 
key_idx
; i < 
öã∫Æ_node
->
num_keys
 - 1; i++) {

75 
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
) = INTERNAL_KEY(internal_node, i+1);

76 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
+1) =

77 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
+2);

80 
	`INTERNAL_KEY
(
öã∫Æ_node
, i¡î«l_node->
num_keys
 - 1) = 0;

81 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, i¡î«l_node->
num_keys
) = 0;

83 
öã∫Æ_node
->
num_keys
--;

85 
	}
}

87 
	$adju°_roŸ
(
TabÀ
* 
èbÀ
, 
NodePage
* 
roŸ_∑ge
) {

92 i‡(
roŸ_∑ge
->
num_keys
 > 0){

102 i‡(!
roŸ_∑ge
->
is_Àaf
) {

103 
I¡î«lPage
* 
roŸ_node
 = (I¡î«lPage*)
roŸ_∑ge
;

104 
èbÀ
->
dbhódî
.
roŸ_off£t
 = 
	`INTERNAL_OFFSET
(
roŸ_node
, 0);

106 
NodePage
* 
node_∑ge
;

107 
node_∑ge
 = (
NodePage
*Ë
	`gë_∑ge
(
èbÀ
,

108 
	`FILEOFF_TO_PAGENUM
(
èbÀ
->
dbhódî
.
roŸ_off£t
));

109 
	`£t_dúty_∑ge
((
Page
*)
node_∑ge
);

111 
node_∑ge
->
∑ª¡
 = 0;

113 
	`ªÀa£_∑ge
((
Page
*)
node_∑ge
);

120 
èbÀ
->
dbhódî
.
roŸ_off£t
 = 0;

122 
	`£t_dúty_∑ge
((
Page
*)&
èbÀ
->
dbhódî
);

124 
	`‰ì_∑ge
(
èbÀ
, (
Page
*)
roŸ_∑ge
);

125 
	}
}

130 
	$cﬂÀs˚_nodes
(
TabÀ
* 
èbÀ
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

131 
√ighb‹_ödex
, 
k_¥ime
) {

133 
i
, 
j
, 
√ighb‹_ö£πi⁄_ödex
, 
n_íd
;

134 
NodePage
* 
tmp
;

140 i‡(
√ighb‹_ödex
 == -1) {

141 
tmp
 = 
node_∑ge
;

142 
node_∑ge
 = 
√ighb‹_∑ge
;

143 
√ighb‹_∑ge
 = 
tmp
;

151 
√ighb‹_ö£πi⁄_ödex
 = 
√ighb‹_∑ge
->
num_keys
;

158 i‡(!
node_∑ge
->
is_Àaf
) {

159 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

160 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

165 
	`INTERNAL_KEY
(
√ighb‹_node
, 
√ighb‹_ö£πi⁄_ödex
Ë
k_¥ime
;

166 
√ighb‹_node
->
num_keys
++;

168 
n_íd
 = 
node
->
num_keys
;

170 
i
 = 
√ighb‹_ö£πi⁄_ödex
 + 1, 
j
 = 0; j < 
n_íd
; i++, j++) {

171 
	`INTERNAL_KEY
(
√ighb‹_node
, 
i
ËINTERNAL_KEY(
node
, 
j
);

172 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
ËINTERNAL_OFFSET(
node
, 
j
);

173 
√ighb‹_node
->
num_keys
++;

174 
node
->
num_keys
--;

180 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
ËINTERNAL_OFFSET(
node
, 
j
);

185 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 + 1; i++) {

186 
NodePage
* 
chûd_∑ge
;

187 
chûd_∑ge
 = (
NodePage
*)
	`gë_∑ge
(
èbÀ
,

188 
	`FILEOFF_TO_PAGENUM
(
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
)));

189 
chûd_∑ge
->
∑ª¡
 = 
	`PAGENUM_TO_FILEOFF
(
√ighb‹_node
->
∑gíum
);

190 
	`£t_dúty_∑ge
((
Page
*)
chûd_∑ge
);

191 
	`ªÀa£_∑ge
((
Page
*)
chûd_∑ge
);

194 
	`‰ì_∑ge
(
èbÀ
, (
Page
*)
node
);

203 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

204 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;

206 
i
 = 
√ighb‹_ö£πi⁄_ödex
, 
j
 = 0; j < 
node
->
num_keys
; i++, j++) {

207 
	`LEAF_KEY
(
√ighb‹_node
, 
i
ËLEAF_KEY(
node
, 
j
);

208 
	`mem˝y
(
	`LEAF_VALUE
(
√ighb‹_node
, 
i
), LEAF_VALUE(
node
, 
j
),

209 
SIZE_VALUE
);

210 
√ighb‹_node
->
num_keys
++;

212 
√ighb‹_node
->
siblög
 = 
node
->sibling;

214 
	`‰ì_∑ge
(
èbÀ
, (
Page
*)
node
);

217 
NodePage
* 
∑ª¡_node
;

218 
∑ª¡_node
 = (
NodePage
*Ë
	`gë_∑ge
(
èbÀ
,

219 
	`FILEOFF_TO_PAGENUM
(
√ighb‹_∑ge
->
∑ª¡
));

220 
	`£t_dúty_∑ge
((
Page
*)
∑ª¡_node
);

221 
	`dñëe_íåy
(
èbÀ
, 
∑ª¡_node
, 
k_¥ime
);

222 
	`ªÀa£_∑ge
((
Page
*)
∑ª¡_node
);

223 
	}
}

229 
	$ªdi°ribuã_nodes
(
TabÀ
* 
èbÀ
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

230 
√ighb‹_ödex
,

231 
k_¥ime_ödex
, 
k_¥ime
) {

233 
i
;

240 i‡(
√ighb‹_ödex
 != -1) {

241 i‡(!
node_∑ge
->
is_Àaf
) {

242 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

243 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

244 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1) =

245 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
);

247 
i
 = 
node
->
num_keys
; i > 0; i--) {

248 
	`INTERNAL_KEY
(
node
, 
i
) = INTERNAL_KEY(node, i - 1);

249 
	`INTERNAL_OFFSET
(
node
, 
i
) = INTERNAL_OFFSET(node, i - 1);

251 
	`INTERNAL_OFFSET
(
node
, 0) =

252 
	`INTERNAL_OFFSET
(
√ighb‹_node
,Çeighb‹_node->
num_keys
);

253 
NodePage
* 
chûd_∑ge
 = (NodePage*)
	`gë_∑ge
(
èbÀ
,

254 
	`FILEOFF_TO_PAGENUM
(
	`INTERNAL_OFFSET
(
node
, 0)));

255 
	`£t_dúty_∑ge
((
Page
*)
chûd_∑ge
);

256 
chûd_∑ge
->
∑ª¡
 = 
	`PAGENUM_TO_FILEOFF
(
node
->
∑gíum
);

257 
	`ªÀa£_∑ge
((
Page
*)
chûd_∑ge
);

259 
	`INTERNAL_OFFSET
(
√ighb‹_node
,Çeighb‹_node->
num_keys
) = 0;

260 
	`INTERNAL_KEY
(
node
, 0Ë
k_¥ime
;

262 
I¡î«lPage
* 
∑ª¡_node
 = (I¡î«lPage*)
	`gë_∑ge
(
èbÀ
,

263 
	`FILEOFF_TO_PAGENUM
(
node
->
∑ª¡
));

264 
	`INTERNAL_KEY
(
∑ª¡_node
, 
k_¥ime_ödex
) =

265 
	`INTERNAL_KEY
(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1);

267 
	`£t_dúty_∑ge
((
Page
*)
∑ª¡_node
);

268 
	`ªÀa£_∑ge
((
Page
*)
∑ª¡_node
);

273 
node
->
num_keys
++;

274 
√ighb‹_node
->
num_keys
--;

276 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

277 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;

279 
i
 = 
node
->
num_keys
; i > 0; i--) {

280 
	`LEAF_KEY
(
node
, 
i
) = LEAF_KEY(node, i - 1);

281 
	`mem˝y
(
	`LEAF_VALUE
(
node
, 
i
), LEAF_VALUE“ode, i - 1), 
SIZE_VALUE
);

283 
	`mem˝y
(
	`LEAF_VALUE
(
node
, 0),

284 
	`LEAF_VALUE
(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1),

285 
SIZE_VALUE
);

286 
	`mem£t
(
	`LEAF_VALUE
(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1), 0,

287 
SIZE_VALUE
);

288 
	`LEAF_KEY
(
node
, 0ËLEAF_KEY(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1);

290 
I¡î«lPage
* 
∑ª¡_node
;

291 
∑ª¡_node
 = (
I¡î«lPage
*)
	`gë_∑ge
(
èbÀ
,

292 
	`FILEOFF_TO_PAGENUM
(
node
->
∑ª¡
));

293 
	`INTERNAL_KEY
(
∑ª¡_node
, 
k_¥ime_ödex
Ë
	`LEAF_KEY
(
node
, 0);

294 
	`£t_dúty_∑ge
((
Page
*)
∑ª¡_node
);

295 
	`ªÀa£_∑ge
((
Page
*)
∑ª¡_node
);

300 
node
->
num_keys
++;

301 
√ighb‹_node
->
num_keys
--;

311 i‡(
node_∑ge
->
is_Àaf
) {

312 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

313 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;;

315 
	`LEAF_KEY
(
node
,Çode->
num_keys
ËLEAF_KEY(
√ighb‹_node
, 0);

316 
	`mem˝y
(
	`LEAF_VALUE
(
node
,Çode->
num_keys
), LEAF_VALUE(
√ighb‹_node
, 0),

317 
SIZE_VALUE
);

319 
I¡î«lPage
* 
∑ª¡_node
;

320 
∑ª¡_node
 = (
I¡î«lPage
*)
	`gë_∑ge
(
èbÀ
,

321 
	`FILEOFF_TO_PAGENUM
(
node
->
∑ª¡
));

322 
	`INTERNAL_KEY
(
∑ª¡_node
, 
k_¥ime_ödex
Ë
	`LEAF_KEY
(
√ighb‹_node
, 1);

323 
	`£t_dúty_∑ge
((
Page
*)
∑ª¡_node
);

324 
	`ªÀa£_∑ge
((
Page
*)
∑ª¡_node
);

326 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 - 1; i++) {

327 
	`LEAF_KEY
(
√ighb‹_node
, 
i
) = LEAF_KEY(neighbor_node, i + 1);

328 
	`mem˝y
(
	`LEAF_VALUE
(
√ighb‹_node
, 
i
), LEAF_VALUE(neighbor_node, i + 1),

329 
SIZE_VALUE
);

335 
node
->
num_keys
++;

336 
√ighb‹_node
->
num_keys
--;

339 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

340 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

342 
	`INTERNAL_KEY
(
node
,Çode->
num_keys
Ë
k_¥ime
;

343 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1) =

344 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 0);

346 
NodePage
* 
chûd_∑ge
;

347 
chûd_∑ge
 = (
NodePage
*)
	`gë_∑ge
(
èbÀ
, 
	`FILEOFF_TO_PAGENUM
(

348 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1)));

349 
chûd_∑ge
->
∑ª¡
 = 
	`PAGENUM_TO_FILEOFF
(
node
->
∑gíum
);

350 
	`£t_dúty_∑ge
((
Page
*)
chûd_∑ge
);

351 
	`ªÀa£_∑ge
((
Page
*)
chûd_∑ge
);

353 
I¡î«lPage
* 
∑ª¡_node
;

354 
∑ª¡_node
 = (
I¡î«lPage
*)
	`gë_∑ge
(
èbÀ
,

355 
	`FILEOFF_TO_PAGENUM
(
node
->
∑ª¡
));

356 
	`INTERNAL_KEY
(
∑ª¡_node
, 
k_¥ime_ödex
) =

357 
	`INTERNAL_KEY
(
√ighb‹_node
, 0);

358 
	`£t_dúty_∑ge
((
Page
*)
∑ª¡_node
);

359 
	`ªÀa£_∑ge
((
Page
*)
∑ª¡_node
);

361 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 - 1; i++) {

362 
	`INTERNAL_KEY
(
√ighb‹_node
, 
i
) = INTERNAL_KEY(neighbor_node, i + 1);

363 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
) =

364 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
 + 1);

367 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
) = INTERNAL_OFFSET(neighbor_node, i + 1);

374 
node
->
num_keys
++;

375 
√ighb‹_node
->
num_keys
--;

378 
	}
}

385 
	$dñëe_íåy
(
TabÀ
* 
èbÀ
, 
NodePage
* 
node_∑ge
, 
öt64_t
 
key
) {

387 
mö_keys
;

388 
off_t
 
√ighb‹_off£t
;

389 
√ighb‹_ödex
;

390 
k_¥ime_ödex
, 
k_¥ime
;

391 
ˇ∑côy
;

395 
	`ªmove_íåy_‰om_node
(
èbÀ
, 
node_∑ge
, 
key
);

399 i‡(
èbÀ
->
dbhódî
.
roŸ_off£t
 =
	`PAGENUM_TO_FILEOFF
(
node_∑ge
->
∑gíum
)) {

400 
	`adju°_roŸ
(
èbÀ
, 
node_∑ge
);

411 #ifde‡
IS_DELAYED_MERGE


412 
mö_keys
 = 1;

414 
mö_keys
 = 
node_∑ge
->
is_Àaf
 ? 
	`cut
(
‹dî_Àaf
 - 1Ë: cut(
‹dî_öã∫Æ
) - 1;

421 i‡(
node_∑ge
->
num_keys
 >
mö_keys
)

433 
√ighb‹_ödex
 = 
	`gë_√ighb‹_ödex
(
èbÀ
, 
node_∑ge
);

434 
k_¥ime_ödex
 = 
√ighb‹_ödex
 == -1 ? 0 :Çeighbor_index;

436 
I¡î«lPage
* 
∑ª¡_node
;

437 
∑ª¡_node
 = (
I¡î«lPage
*)

438 
	`gë_∑ge
(
èbÀ
, 
	`FILEOFF_TO_PAGENUM
(
node_∑ge
->
∑ª¡
));

440 
k_¥ime
 = 
	`INTERNAL_KEY
(
∑ª¡_node
, 
k_¥ime_ödex
);

441 
√ighb‹_off£t
 = 
√ighb‹_ödex
 =-1 ? 
	`INTERNAL_OFFSET
(
∑ª¡_node
, 1) :

442 
	`INTERNAL_OFFSET
(
∑ª¡_node
, 
√ighb‹_ödex
);

443 
	`ªÀa£_∑ge
((
Page
*)
∑ª¡_node
);

445 
ˇ∑côy
 = 
node_∑ge
->
is_Àaf
 ? 
‹dî_Àaf
 : 
‹dî_öã∫Æ
 - 1;

447 
NodePage
* 
√ighb‹_∑ge
;

448 
√ighb‹_∑ge
 = (
NodePage
*Ë
	`gë_∑ge
(
èbÀ
,

449 
	`FILEOFF_TO_PAGENUM
(
√ighb‹_off£t
));

450 
	`£t_dúty_∑ge
((
Page
*)
√ighb‹_∑ge
);

453 i‡(
√ighb‹_∑ge
->
num_keys
 + 
node_∑ge
->num_key†< 
ˇ∑côy
){

454 
	`cﬂÀs˚_nodes
(
èbÀ
, 
node_∑ge
, 
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime
);

458 
	`ªdi°ribuã_nodes
(
èbÀ
, 
node_∑ge
, 
√ighb‹_∑ge
, 
√ighb‹_ödex
,

459 
k_¥ime_ödex
, 
k_¥ime
);

461 
	`ªÀa£_∑ge
((
Page
*)
√ighb‹_∑ge
);

462 
	}
}

466 
	$dñëe_ªc‹d
(
TabÀ
* 
èbÀ
, 
öt64_t
 
key
) {

467 
öt64_t
* 
vÆue_found
 = 
NULL
;

468 i‡((
vÆue_found
 = 
	`föd_ªc‹d
(
èbÀ
, 
key
)) == 0) {

470 
	`‰ì
(
vÆue_found
);

474 
LófPage
* 
Àaf_node
;

475 
	`föd_Àaf
(
èbÀ
, 
key
, &
Àaf_node
);

476 
	`£t_dúty_∑ge
((
Page
*)
Àaf_node
);

478 
	`dñëe_íåy
(
èbÀ
, (
NodePage
*)
Àaf_node
, 
key
);

479 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
);

482 
	}
}

	@src/file.cpp

1 
	~<sys/ty≥s.h
>

2 
	~<f˙é.h
>

3 
	~<°dlib.h
>

4 
	~<as£π.h
>

5 
	~<°dio.h
>

6 
	~<uni°d.h
>

7 
	~<°rög.h
>

8 
	~"fûe.h
"

9 
	~"∑nic.h
"

11 
	gdbfûe
;

14 
	$fûe_‰ì_∑ge
(
TabÀ
* 
èbÀ
, 
∑gíum_t
 
∑gíum
) {

15 
FªePage
 
‰ì∑ge
;

16 
	`mem£t
(&
‰ì∑ge
, 0, 
PAGE_SIZE
);

18 
‰ì∑ge
.
√xt
 = 
èbÀ
->
dbhódî
.
‰ìli°
;

19 
	`fûe_wrôe_∑ge
(
èbÀ
, 
∑gíum
, &
‰ì∑ge
);

21 
èbÀ
->
dbhódî
.
‰ìli°
 = 
	`PAGENUM_TO_FILEOFF
(
∑gíum
);

22 
	}
}

25 
	$ex∑nd_fûe
(
TabÀ
* 
èbÀ
, 
size_t
 
˙t_∑ge_to_ex∑nd
) {

26 
off_t
 
off£t
 = 
èbÀ
->
dbhódî
.
num_∑ges
 * 
PAGE_SIZE
;

28 i‡(
èbÀ
->
dbhódî
.
num_∑ges
 > 1024 * 1024) {

30 
	`PANIC
("Test: youáreálready havingá DB file overÅhan 4GB");

33 
i
;

34 
i
 = 0; i < 
˙t_∑ge_to_ex∑nd
; i++) {

35 
	`fûe_‰ì_∑ge
(
èbÀ
, 
	`FILEOFF_TO_PAGENUM
(
off£t
));

36 
èbÀ
->
dbhódî
.
num_∑ges
++;

37 
off£t
 +
PAGE_SIZE
;

39 
	}
}

41 
	$fûe_ªad_∑ge
(
TabÀ
* 
èbÀ
, 
∑gíum_t
 
∑gíum
, * 
∑ge
) {

42 
	`l£ek
(
èbÀ
->
dbfûe
, 
	`PAGENUM_TO_FILEOFF
(
∑gíum
), 
SEEK_SET
);

43 
	`ªad
(
èbÀ
->
dbfûe
, 
∑ge
, 
PAGE_SIZE
);

44 
	}
}

46 
	$fûe_wrôe_∑ge
(
TabÀ
* 
èbÀ
, 
∑gíum_t
 
∑gíum
, * 
∑ge
) {

47 
	`l£ek
(
èbÀ
->
dbfûe
, 
	`PAGENUM_TO_FILEOFF
(
∑gíum
), 
SEEK_SET
);

48 
	`wrôe
(
èbÀ
->
dbfûe
, 
∑ge
, 
PAGE_SIZE
);

49 
	}
}

	@src/global_vars.cpp

1 
	~"b±_öã∫Æ.h
"

10 
	g‹dî_öã∫Æ
 = 
BPTREE_INTERNAL_ORDER
;

11 
	g‹dî_Àaf
 = 
BPTREE_LEAF_ORDER
;

	@src/insert.cpp

1 
	~"b±_öã∫Æ.h
"

6 
	$gë_À·_ödex
(
TabÀ
* 
èbÀ
, 
I¡î«lPage
* 
∑ª¡
, 
off_t
 
À·_off£t
) {

7 
À·_ödex
 = 0;

8 
À·_ödex
 <
∑ª¡
->
num_keys
 &&

9 
	`INTERNAL_OFFSET
(
∑ª¡
, 
À·_ödex
Ë!
À·_off£t
)

10 
À·_ödex
++;

11  
À·_ödex
;

12 
	}
}

16 
	$ö£π_öto_Àaf
(
TabÀ
* 
èbÀ
, 
LófPage
* 
Àaf_node
, 
öt64_t
 
key
, i¡64_t* 
vÆue
) {

17 
ö£πi⁄_poöt
;

18 
i
;

20 
ö£πi⁄_poöt
 = 0;

21 
ö£πi⁄_poöt
 < 
Àaf_node
->
num_keys
 &&

22 
	`LEAF_KEY
(
Àaf_node
, 
ö£πi⁄_poöt
Ë< 
key
)

23 
ö£πi⁄_poöt
++;

26 
i
 = 
Àaf_node
->
num_keys
 - 1; i >
ö£πi⁄_poöt
; i--) {

27 
	`LEAF_KEY
(
Àaf_node
, 
i
+1) = LEAF_KEY(leaf_node, i);

28 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
i
+1), LEAF_VALUE(leaf_node, i),

29 
SIZE_VALUE
);

32 
	`LEAF_KEY
(
Àaf_node
, 
ö£πi⁄_poöt
Ë
key
;

33 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
ö£πi⁄_poöt
), 
vÆue
, 
SIZE_VALUE
);

34 
Àaf_node
->
num_keys
++;

38 
	}
}

43 
	$ö£π_öto_Àaf_a·î_•lôtög
(
TabÀ
* 
èbÀ
, 
LófPage
* 
Àaf
, 
öt64_t
 
key
,

44 
öt64_t
* 
vÆue
) {

45 
ö£πi⁄_ödex
, 
•lô
, 
i
, 
j
;

46 
öt64_t
 
√w_key
;

49 
LófPage
* 
√w_Àaf
 = (LófPage*)
	`Æloc_∑ge
(
èbÀ
);

50 
√w_Àaf
->
is_Àaf
 = 
åue
;

51 
√w_Àaf
->
num_keys
 = 0;

53 
ö£πi⁄_ödex
 = 0;

54 
ö£πi⁄_ödex
 < 
‹dî_Àaf
 - 1 &&

55 
	`LEAF_KEY
(
Àaf
, 
ö£πi⁄_ödex
Ë< 
key
){

56 
ö£πi⁄_ödex
++;

59 
•lô
 = 
	`cut
(
‹dî_Àaf
 - 1);

61 i‡(
ö£πi⁄_ödex
 < 
•lô
) {

63 
i
 = 
•lô
 - 1, 
j
 = 0; i < 
‹dî_Àaf
 - 1; i++, j++) {

64 
	`LEAF_KEY
(
√w_Àaf
, 
j
ËLEAF_KEY(
Àaf
, 
i
);

65 
	`mem˝y
(
	`LEAF_VALUE
(
√w_Àaf
, 
j
), LEAF_VALUE(
Àaf
, 
i
), 
SIZE_VALUE
);

67 
√w_Àaf
->
num_keys
++;

68 
Àaf
->
num_keys
--;

71 
i
 = 
•lô
 - 2; i >
ö£πi⁄_ödex
; i--) {

72 
	`LEAF_KEY
(
Àaf
, 
i
+1) = LEAF_KEY(leaf, i);

73 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf
, 
i
+1), LEAF_VALUE÷óf, i), 
SIZE_VALUE
);

75 
	`LEAF_KEY
(
Àaf
, 
ö£πi⁄_ödex
Ë
key
;

76 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf
, 
ö£πi⁄_ödex
), 
vÆue
, 
SIZE_VALUE
);

77 
Àaf
->
num_keys
++;

80 
i
 = 
•lô
, 
j
 = 0; i < 
‹dî_Àaf
 - 1; i++, j++) {

81 i‡(
i
 =
ö£πi⁄_ödex
) {

83 
j
++;

85 
	`LEAF_KEY
(
√w_Àaf
, 
j
ËLEAF_KEY(
Àaf
, 
i
);

86 
	`mem˝y
(
	`LEAF_VALUE
(
√w_Àaf
, 
j
), LEAF_VALUE(
Àaf
, 
i
), 
SIZE_VALUE
);

88 
√w_Àaf
->
num_keys
++;

89 
Àaf
->
num_keys
--;

91 
	`LEAF_KEY
(
√w_Àaf
, 
ö£πi⁄_ödex
 - 
•lô
Ë
key
;

92 
	`mem˝y
(
	`LEAF_VALUE
(
√w_Àaf
, 
ö£πi⁄_ödex
 - 
•lô
), 
vÆue
,

93 
SIZE_VALUE
);

94 
√w_Àaf
->
num_keys
++;

98 
√w_Àaf
->
siblög
 = 
Àaf
->sibling;

99 
Àaf
->
siblög
 = 
	`PAGENUM_TO_FILEOFF
(
√w_Àaf
->
∑gíum
);

102 
i
 = 
Àaf
->
num_keys
; i < 
‹dî_Àaf
 - 1; i++) {

103 
	`LEAF_KEY
(
Àaf
, 
i
) = 0;

104 
	`mem£t
(
	`LEAF_VALUE
(
Àaf
, 
i
), 0, 
SIZE_VALUE
);

106 
i
 = 
√w_Àaf
->
num_keys
; i < 
‹dî_Àaf
 - 1; i++) {

107 
	`LEAF_KEY
(
√w_Àaf
, 
i
) = 0;

108 
	`mem£t
(
	`LEAF_VALUE
(
√w_Àaf
, 
i
), 0, 
SIZE_VALUE
);

111 
√w_Àaf
->
∑ª¡
 = 
Àaf
->parent;

113 
√w_key
 = 
	`LEAF_KEY
(
√w_Àaf
, 0);

116 
	`ö£π_öto_∑ª¡
(
èbÀ
, (
NodePage
*)
Àaf
, 
√w_key
, (NodePage*)
√w_Àaf
);

118 
	`ªÀa£_∑ge
((
Page
*)
√w_Àaf
);

119 
	}
}

124 
	$ö£π_öto_node
(
TabÀ
* 
èbÀ
, 
I¡î«lPage
* 
n
, 
À·_ödex
, 
öt64_t
 
key
,

125 
off_t
 
right_off£t
) {

126 
i
;

128 
i
 = 
n
->
num_keys
; i > 
À·_ödex
; i--) {

129 
	`INTERNAL_OFFSET
(
n
, 
i
 + 1) = INTERNAL_OFFSET(n, i);

130 
	`INTERNAL_KEY
(
n
, 
i
) = INTERNAL_KEY(n, i - 1);

132 
	`INTERNAL_OFFSET
(
n
, 
À·_ödex
 + 1Ë
right_off£t
;

133 
	`INTERNAL_KEY
(
n
, 
À·_ödex
Ë
key
;

134 
n
->
num_keys
++;

135 
	}
}

140 
	$ö£π_öto_node_a·î_•lôtög
(
TabÀ
* 
èbÀ
, 
I¡î«lPage
* 
ﬁd_node
, 
À·_ödex
,

141 
öt64_t
 
key
, 
off_t
 
right_off£t
) {

142 
i
, 
j
, 
•lô
, 
k_¥ime
;

143 
öt64_t
* 
ãmp_keys
;

144 
off_t
* 
ãmp_poöãrs
;

153 
ãmp_poöãrs
 = (
off_t
*)
	`mÆloc
–(
‹dî_öã∫Æ
 + 1) * (off_t) );

154 i‡(
ãmp_poöãrs
 =
NULL
) {

155 
	`PANIC
("TemporaryÖointersárray for splittingÇodes.");

157 
ãmp_keys
 = (
öt64_t
*)
	`mÆloc
–
‹dî_öã∫Æ
 * (int64_t) );

158 i‡(
ãmp_keys
 =
NULL
) {

159 
	`PANIC
("Temporary keysárray for splittingÇodes.");

162 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
 + 1; i++, j++) {

163 i‡(
j
 =
À·_ödex
 + 1) j++;

164 
ãmp_poöãrs
[
j
] = 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
);

167 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
; i++, j++) {

168 i‡(
j
 =
À·_ödex
) j++;

169 
ãmp_keys
[
j
] = 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
);

172 
ãmp_poöãrs
[
À·_ödex
 + 1] = 
right_off£t
;

173 
ãmp_keys
[
À·_ödex
] = 
key
;

178 
•lô
 = 
	`cut
(
‹dî_öã∫Æ
);

180 
I¡î«lPage
* 
√w_node
 = (I¡î«lPage*)
	`Æloc_∑ge
(
èbÀ
);

181 
√w_node
->
num_keys
 = 0;

182 
√w_node
->
is_Àaf
 = 0;

184 
ﬁd_node
->
num_keys
 = 0;

185 
i
 = 0; i < 
•lô
 - 1; i++) {

186 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
Ë
ãmp_poöãrs
[i];

187 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
Ë
ãmp_keys
[i];

188 
ﬁd_node
->
num_keys
++;

190 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
Ë
ãmp_poöãrs
[i];

191 
k_¥ime
 = 
ãmp_keys
[
•lô
 - 1];

192 ++
i
, 
j
 = 0; i < 
‹dî_öã∫Æ
; i++, j++) {

193 
	`INTERNAL_OFFSET
(
√w_node
, 
j
Ë
ãmp_poöãrs
[
i
];

194 
	`INTERNAL_KEY
(
√w_node
, 
j
Ë
ãmp_keys
[
i
];

195 
√w_node
->
num_keys
++;

197 
	`INTERNAL_OFFSET
(
√w_node
, 
j
Ë
ãmp_poöãrs
[
i
];

198 
	`‰ì
(
ãmp_poöãrs
);

199 
	`‰ì
(
ãmp_keys
);

200 
√w_node
->
∑ª¡
 = 
ﬁd_node
->parent;

201 
i
 = 0; i <
√w_node
->
num_keys
; i++) {

202 
NodePage
* 
chûd_∑ge
 =

203 (
NodePage
*Ë
	`gë_∑ge
(
èbÀ
,

204 
	`FILEOFF_TO_PAGENUM
(
	`INTERNAL_OFFSET
(
√w_node
, 
i
)));

206 
chûd_∑ge
->
∑ª¡
 = 
	`PAGENUM_TO_FILEOFF
(
√w_node
->
∑gíum
);

207 
	`£t_dúty_∑ge
((
Page
*)
chûd_∑ge
);

208 
	`ªÀa£_∑ge
((
Page
*)
chûd_∑ge
);

212 
i
 = 
ﬁd_node
->
num_keys
; i < 
‹dî_öã∫Æ
 - 1; i++) {

213 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
+1) = 0;

214 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
) = 0;

217 
i
 = 
√w_node
->
num_keys
; i < 
‹dî_öã∫Æ
 - 1; i++) {

218 
	`INTERNAL_OFFSET
(
√w_node
, 
i
+1) = 0;

219 
	`INTERNAL_KEY
(
√w_node
, 
i
) = 0;

225 
	`ö£π_öto_∑ª¡
(
èbÀ
, (
NodePage
*)
ﬁd_node
, 
k_¥ime
, (NodePage*)
√w_node
);

227 
	`ªÀa£_∑ge
((
Page
*)
√w_node
);

228 
	}
}

233 
	$ö£π_öto_∑ª¡
(
TabÀ
* 
èbÀ
, 
NodePage
* 
À·
, 
öt64_t
 
key
, NodePage* 
right
) {

234 
À·_ödex
;

235 
I¡î«lPage
* 
∑ª¡_node
;

238 i‡(
À·
->
∑ª¡
 == 0) {

239 
	`ö£π_öto_√w_roŸ
(
èbÀ
, 
À·
, 
key
, 
right
);

243 
∑ª¡_node
 = (
I¡î«lPage
*Ë
	`gë_∑ge
(
èbÀ
, 
	`FILEOFF_TO_PAGENUM
(
À·
->
∑ª¡
));

244 
	`£t_dúty_∑ge
((
Page
*)
∑ª¡_node
);

251 
À·_ödex
 = 
	`gë_À·_ödex
(
èbÀ
, 
∑ª¡_node
,

252 
	`PAGENUM_TO_FILEOFF
(
À·
->
∑gíum
));

256 i‡(
∑ª¡_node
->
num_keys
 < 
‹dî_öã∫Æ
 - 1) {

257 
	`ö£π_öto_node
(
èbÀ
, 
∑ª¡_node
, 
À·_ödex
, 
key
,

258 
	`PAGENUM_TO_FILEOFF
(
right
->
∑gíum
));

259 
	`ªÀa£_∑ge
((
Page
*)
∑ª¡_node
);

266 
	`ö£π_öto_node_a·î_•lôtög
(
èbÀ
, 
∑ª¡_node
, 
À·_ödex
, 
key
,

267 
	`PAGENUM_TO_FILEOFF
(
right
->
∑gíum
));

268 
	`ªÀa£_∑ge
((
Page
*)
∑ª¡_node
);

269 
	}
}

274 
	$ö£π_öto_√w_roŸ
(
TabÀ
* 
èbÀ
, 
NodePage
* 
À·
, 
öt64_t
 
key
, NodePage* 
right
) {

276 
I¡î«lPage
* 
roŸ_node
 = (I¡î«lPage*)
	`Æloc_∑ge
(
èbÀ
);

277 
	`INTERNAL_KEY
(
roŸ_node
, 0Ë
key
;

278 
	`INTERNAL_OFFSET
(
roŸ_node
, 0Ë
	`PAGENUM_TO_FILEOFF
(
À·
->
∑gíum
);

279 
	`INTERNAL_OFFSET
(
roŸ_node
, 1Ë
	`PAGENUM_TO_FILEOFF
(
right
->
∑gíum
);

280 
roŸ_node
->
num_keys
++;

281 
roŸ_node
->
∑ª¡
 = 0;

282 
roŸ_node
->
is_Àaf
 = 0;

283 
À·
->
∑ª¡
 = 
	`PAGENUM_TO_FILEOFF
(
roŸ_node
->
∑gíum
);

284 
right
->
∑ª¡
 = 
	`PAGENUM_TO_FILEOFF
(
roŸ_node
->
∑gíum
);

286 
èbÀ
->
dbhódî
.
roŸ_off£t
 = 
	`PAGENUM_TO_FILEOFF
(
roŸ_node
->
∑gíum
);

288 
	`ªÀa£_∑ge
((
Page
*)
roŸ_node
);

289 
	}
}

292 
	$°¨t_√w_åì
(
TabÀ
* 
èbÀ
, 
öt64_t
 
key
, i¡64_t* 
vÆue
) {

293 
LófPage
* 
roŸ_node
 = (LófPage*)
	`Æloc_∑ge
(
èbÀ
);

294 
roŸ_node
->
∑ª¡
 = 0;

295 
roŸ_node
->
is_Àaf
 = 1;

296 
roŸ_node
->
num_keys
 = 1;

297 
	`LEAF_KEY
(
roŸ_node
, 0Ë
key
;

298 
roŸ_node
->
siblög
 = 0;

299 
	`mem˝y
(
	`LEAF_VALUE
(
roŸ_node
, 0), 
vÆue
, 
SIZE_VALUE
);

301 
èbÀ
->
dbhódî
.
roŸ_off£t
 = 
	`PAGENUM_TO_FILEOFF
(
roŸ_node
->
∑gíum
);

302 
	`£t_dúty_∑ge
((
Page
*)&
èbÀ
->
dbhódî
);

304 
	`ªÀa£_∑ge
((
Page
*)
roŸ_node
);

305 
	}
}

311 
	$ö£π_ªc‹d
(
TabÀ
* 
èbÀ
, 
öt64_t
 
key
, i¡64_t* 
vÆue
) {

312 
öt64_t
* 
vÆue_found
 = 
NULL
;

316 i‡((
vÆue_found
 = 
	`föd_ªc‹d
(
èbÀ
, 
key
)) != 0) {

317 
	`‰ì
(
vÆue_found
);

323 i‡(
èbÀ
->
dbhódî
.
roŸ_off£t
 == 0) {

324 
	`°¨t_√w_åì
(
èbÀ
, 
key
, 
vÆue
);

330 
LófPage
* 
Àaf_node
;

331 
	`föd_Àaf
(
èbÀ
, 
key
, &
Àaf_node
);

335 i‡(
Àaf_node
->
num_keys
 < 
‹dî_Àaf
 - 1) {

336 
	`ö£π_öto_Àaf
(
èbÀ
, 
Àaf_node
, 
key
, 
vÆue
);

340 
	`ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ
, 
Àaf_node
, 
key
, 
vÆue
);

342 
	`£t_dúty_∑ge
((
Page
*)
Àaf_node
);

343 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
);

345 
	}
}

	@src/lock.cpp

1 
	~"lock.h
"

3 
LockM™agî
 
	glock_sys
;

5 
boﬁ
 
	gLockM™agî
::
	$acquúe_lock
(
åx_t
* 
åx
, 
èbÀ_id
, 
∑gíum_t
 
∑ge_id
, 
öt64_t
 
key
, 
LockMode
 
mode
, 
buf_∑ge_i
) {

7 
LOCK_SYS_MUTEX_ENTER
;

9 
TabÀ
* 
èbÀ
 = 
	`gë_èbÀ
(
èbÀ_id
);

10 
Tønß˘i⁄M™agî
* 
tm
 = &
åx_sys
;

13 i‡(
åx
->
	`gëSèã
(Ë!
RUNNING
)

14 
	`PANIC
("CannotácquireÜock in other mode.\n");

16 
LOCK_REQ_STATE
 
lock_°©e
;

17 
lock_t
* 
lock_±r
 = 
nuŒ±r
;

19 
waôög_f‹_åx_id
 = -1;

20 
lock_t
* 
¥ev_‹_own_lock_±r
 = 
nuŒ±r
;

21 
lock_t
* 
waô_lock
 = 
nuŒ±r
;

41 i‡(
mode
 =
LOCK_X
) {

43 autÿ
rô
 = 
lock_èbÀ
[
∑ge_id
].
lock_li°
.
	`rbegö
();Ñô !lock_èbÀ[∑ge_id].lock_li°.
	`ªnd
(); ++rit) {

45 
lock_°©e
 = 
LOCK_GRANTED_PUSH
;

47 i‡(
rô
 -> 
key
 =key &&Ñô -> 
èbÀ_id
 ==Åable_id) {

49 
¥ev_‹_own_lock_±r
 = &(*
rô
);

51 
lock_t
* 
lock_t_±r
 = 
¥ev_‹_own_lock_±r
;Üock_t_±∏!
nuŒ±r
;) {

53 i‡(
lock_t_±r
 -> 
åx_id
 !
åx
->
	`gëTønß˘i⁄Id
()) {

54 
lock_°©e
 = 
LOCK_WAITING
;

55 
waôög_f‹_åx_id
 = 
lock_t_±r
 -> 
åx_id
;

56 
waô_lock
 = 
lock_t_±r
;

59 } i‡(
lock_t_±r
 -> 
lock_mode
 =
LOCK_X
){

60 
lock_°©e
 = 
LOCK_GRANTED_NO_PUSH
;

69 autÿ
rô
 = 
lock_èbÀ
[
∑ge_id
].
lock_li°
.
	`rbegö
();Ñô !lock_èbÀ[∑ge_id].lock_li°.
	`ªnd
(); ++rit) {

71 
lock_°©e
 = 
LOCK_GRANTED_PUSH
;

73 i‡(
rô
 -> 
key
 =key &&Ñô -> 
èbÀ_id
 ==Åable_id) {

75 
¥ev_‹_own_lock_±r
 = &(*
rô
);

77 
lock_t
* 
lock_t_±r
 = 
¥ev_‹_own_lock_±r
;Üock_t_±∏!
nuŒ±r
;) {

79 i‡(
lock_t_±r
 -> 
åx_id
 !
åx
->
	`gëTønß˘i⁄Id
()) {

81 i‡(
lock_t_±r
 -> 
lock_mode
 =
LOCK_X
) {

82 
lock_°©e
 = 
LOCK_WAITING
;

83 
waôög_f‹_åx_id
 = 
lock_t_±r
 -> 
åx_id
;

84 
waô_lock
 = 
lock_t_±r
;

89 
lock_°©e
 = 
LOCK_GRANTED_NO_PUSH
;

98 i‡(
lock_°©e
 =
LOCK_GRANTED_NO_PUSH
) {

99  
åue
;

102 i‡(
lock_°©e
 =
LOCK_GRANTED_PUSH
) {

103 
MAKE_LOCK_REQUEST_GRANTED
;

104 
lock_±r
 -> 
acquúed
 = 
åue
;

105 
åx
 -> 
	`push_acquúed_lock
(
lock_±r
);

106  
åue
;

109 i‡(
dl_checkî
.
	`dódlock_checkög
(
åx
->
	`gëTønß˘i⁄Id
(), 
waôög_f‹_åx_id
)) {

110 
	`ªÀa£_lock_ab‹ãd
(
åx
);

111 
åx
->
	`£tSèã
(
ABORTED
);

112  
Ál£
;

115 
MAKE_LOCK_REQUEST_WAIT
;

117 
åx_t
* 
¥ev_åx
 = 
nuŒ±r
;

119 i‡(
mode
 =
LOCK_S
) {

121 
¥ev_åx
 = 
tm
 -> 
	`gëTønß˘i⁄
(
waôög_f‹_åx_id
);

122 
¥ev_åx
 -> 
	`gëCV
(Ë-> 
	`waô
(
l_muãx
);

125 
¥ev_åx
 = 
tm
 -> 
	`gëTønß˘i⁄
(
waôög_f‹_åx_id
);

126 
¥ev_åx
 -> 
	`gëCV
(Ë-> 
	`waô
(
l_muãx
);

129 
åue
) {

130 
boﬁ
 
°ûl_c⁄Êi˘
 = 
Ál£
;

132 i‡(!
lock_±r
 -> 
¥ev
)

135 autÿ
lock_t_±r
 = 
lock_±r
 -> 
¥ev
;Üock_t_±∏!
nuŒ±r
;) {

137 i‡(
lock_t_±r
 -> 
åx_id
 !
åx
 -> 
	`gëTønß˘i⁄Id
()) {

139 
°ûl_c⁄Êi˘
 = 
åue
;

140 
waôög_f‹_åx_id
 = 
lock_t_±r
 -> 
åx_id
;

141 
lock_±r
 -> 
waô_lock
 = 
lock_t_±r
;

143 i‡(
dl_checkî
.
	`ch™ge_waôög_f‹
(
åx
->
	`gëTønß˘i⁄Id
(), 
waôög_f‹_åx_id
)) {

145 
	`ªÀa£_lock_ab‹ãd
(
åx
);

146 
åx
->
	`£tSèã
(
ABORTED
);

147  
Ál£
;

149 
¥ev_åx
 = 
tm
 -> 
	`gëTønß˘i⁄
(
waôög_f‹_åx_id
);

150 
¥ev_åx
 -> 
	`gëCV
(Ë-> 
	`waô
(
l_muãx
);

153 
lock_t_±r
 =Üock_t_±∏-> 
¥ev
;

157 i‡(!
°ûl_c⁄Êi˘
)

162 
lock_±r
 -> 
acquúed
 = 
åue
;

163 
åx
 -> 
	`push_acquúed_lock
(
lock_±r
);

165  
åue
;

166 
	}
}

168 
	gLockM™agî
::
	$ªÀa£_lock_low
(
åx_t
* 
åx
, 
lock_t
* 
lock_±r
) {

170 
∑ge_id
 = 
lock_±r
 ->Öage_id;

171 autÿ
ô
 = 
lock_±r
 -> 
√xt
; ià!
nuŒ±r
;) {

172 i‡(!
ô
)

174 i‡(
ô
->
waô_lock
 =
lock_±r
)

175 
ô
->
waô_lock
 = 
nuŒ±r
;

178 i‡(
lock_±r
 -> 
¥ev
)

179 
lock_±r
 -> 
¥ev
 -> 
√xt
 =Üock_ptr ->Çext;

180 i‡(
lock_±r
 -> 
√xt
)

181 
lock_±r
 -> 
√xt
 -> 
¥ev
 =Üock_ptr ->Örev;

182 
boﬁ
 
Êag
 = 
åue
;

183 autÿ
ô
 = 
lock_èbÀ
[
∑ge_id
].
lock_li°
.
	`begö
(); ià!lock_èbÀ[∑ge_id].lock_li°.
	`íd
(); ++it) {

184 i‡(
ô
 -> 
åx_id
 =
åx
->
	`gëTønß˘i⁄Id
(Ë&& ià-> 
key
 =
lock_±r
 -> key && ià-> 
acquúed
 &&

185 
ô
 -> 
lock_mode
 =
lock_±r
 ->Üock_modê&& ià-> 
èbÀ_id
 ==Üock_ptr ->Åable_id){

186 
lock_èbÀ
[
∑ge_id
].
lock_li°
.
	`îa£
(
ô
);

187 
Êag
 = 
Ál£
;

192 i‡(
Êag
)

193 
	`PANIC
("Release_lock_low. CannotÉraseÜock_t inÜist).\n");

195 
	}
}

200 
boﬁ
 
	gLockM™agî
::
	$ªÀa£_lock_ab‹ãd
(
åx_t
* 
åx
) {

201 c⁄° 
°d
::
li°
<
lock_t
*> 
acquúed_lock
 = 
åx
->
	`gëAcquúedLock
();

202 autÿ
ô
 = 
acquúed_lock
.
	`begö
(); ià!acquúed_lock.
	`íd
(); ++it) {

203 
	`ªÀa£_lock_low
(
åx
, *
ô
);

205 
åx
->
	`gëCV
()->
	`nŸify_Æl
();

206 
åx
->
	`p›_Æl_acquúed_lock
();

207  
åue
;

208 
	}
}

213 
boﬁ
 
	gLockM™agî
::
	$ªÀa£_lock
(
åx_t
* 
åx
) {

214 
LOCK_SYS_MUTEX_ENTER
;

216 
dl_checkî
.
	`dñëe_waôög_f‹_åx
(
åx
->
	`gëTønß˘i⁄Id
());

218 c⁄° 
°d
::
li°
<
lock_t
*> 
acquúed_lock
 = 
åx
->
	`gëAcquúedLock
();

220 autÿ
ô
 = 
acquúed_lock
.
	`begö
(); ià!acquúed_lock.
	`íd
(); ++it) {

221 
	`ªÀa£_lock_low
(
åx
, *
ô
);

224 
åx
->
	`gëCV
()->
	`nŸify_Æl
();

225 
åx
->
	`p›_Æl_acquúed_lock
();

227  
åue
;

228 
	}
}

	@src/main.cpp

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<f˙é.h
>

4 
	~<uni°d.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<öây≥s.h
>

7 
	~"b±.h
"

8 
	~"fûe.h
"

11 
	$maö
–
¨gc
, ** 
¨gv
 ) {

12 
öt64_t
 
öput_key
;

13 
öt64_t
 
öput_vÆue
[
SIZE_COLUMN
];

14 
ö°ru˘i⁄
;

15 
èbÀ_id
;

18 
	`li˚n£_nŸi˚
();

19 
	`ußge_1
();

20 
	`ußge_2
();

22 
	`öô_db
(1000);

23 
èbÀ_id
 = 
	`›í_èbÀ
("test.db", 15);

24 
	`¥öt_åì
(
èbÀ_id
);

25 
	`¥ötf
("> ");

26 
	`sˇnf
("%c", &
ö°ru˘i⁄
Ë!
EOF
) {

27 
ö°ru˘i⁄
) {

30 
	`ö£π
(
èbÀ_id
, 
öput_key
, 
öput_vÆue
);

31 
	`¥öt_åì
(
èbÀ_id
);

34 
	`sˇnf
("%" 
PRIu64
 "", &
öput_key
);

35 
	`ªmove
(
èbÀ_id
, 
öput_key
);

36 
	`¥öt_åì
(
èbÀ_id
);

40 
	`sˇnf
("%" 
PRIu64
 "", &
öput_key
);

41 
	`föd_™d_¥öt
(
èbÀ_id
, 
öput_key
);

44 
	`gëch¨
() != ()'\n');

45 
	`˛o£_èbÀ
(
èbÀ_id
);

46 
	`shutdown_db
();

47  
EXIT_SUCCESS
;

50 
	`¥öt_åì
(
èbÀ_id
);

53 
	`ußge_2
();

56 
	`gëch¨
() != ()'\n');

57 
	`¥ötf
("> ");

59 
	`¥ötf
("\n");

61 
	`˛o£_èbÀ
(
èbÀ_id
);

62 
	`shutdown_db
();

64  
EXIT_SUCCESS
;

65 
	}
}

	@src/table.cpp

1 
	~"b±_öã∫Æ.h
"

2 
	~"lock.h
"

3 
	~"åx.h
"

5 
TabÀ
 
	gèbÀs
[
MAX_NUM_TABLE
];

12 
	$Æloc_èbÀ
() {

13 
i
 = 0; i < 
MAX_NUM_TABLE
; i++){

14 i‡(
èbÀs
[
i
].
èbÀ_id
 == 0){

15 
èbÀs
[
i
].
èbÀ_id
 = i+1;

16  
i
+1;

19 
	`PANIC
("AllocÅableÜimit.");

21 
	}
}

23 
TabÀ
* 
	$gë_èbÀ
(
èbÀ_id
) {

24 i‡(
èbÀ_id
 <= 0){

25 
	`PANIC
("get_table");

27  &
èbÀs
[
èbÀ_id
-1];

28 
	}
}

31 
	$›í_‹_¸óã_èbÀ_fûe
(c⁄° * 
fûíame
, 
num_cﬁumn
) {

32 
èbÀ_id
 = 
	`Æloc_èbÀ
();

33 
TabÀ
* 
èbÀ
;

35 i‡(
èbÀ_id
 <= 0){

38 
èbÀ
 = 
	`gë_èbÀ
(
èbÀ_id
);

39 
èbÀ
->
dbfûe
 = 
	`›í
(
fûíame
, 
O_RDWR
);

40 i‡(
èbÀ
->
dbfûe
 < 0) {

42 
èbÀ
->
dbfûe
 = 
	`›í
(
fûíame
, 
O_CREAT
|
O_RDWR
, 
S_IRUSR
|
S_IWUSR
);

43 i‡(
èbÀ
->
dbfûe
 < 0) {

44 
	`PANIC
("failedÅo createÇew db file");

46 
	`öô_√w_hódî_∑ge
(&
èbÀ
->
dbhódî
, 
èbÀ_id
, 
num_cﬁumn
);

49 
	`lﬂd_hódî_∑ge
(
èbÀ
);

51  
èbÀ_id
;

52 
	}
}

55 
	$˛o£_èbÀ_fûe
(
TabÀ
* 
èbÀ
) {

56 
	`ªÀa£_hódî_∑ge
(
èbÀ
);

57 
	`˛o£
(
èbÀ
->
dbfûe
);

58 
èbÀ
->
dbfûe
 = 0;

59 
èbÀ
->
èbÀ_id
 = 0;

61 
	}
}

	@src/trx.cpp

1 
	~"åx.h
"

3 
Tønß˘i⁄M™agî
 
	gåx_sys
;

5 
	gTønß˘i⁄M™agî
::~
	$Tønß˘i⁄M™agî
() {

6 autÿ
ô
 = 
a˘ive_åx
.
	`begö
(); ià!a˘ive_åx.
	`íd
(); ++it) {

7 i‡(
ô
 -> 
£c⁄d
)

8 
dñëe
 
ô
->
£c⁄d
;

10 
a˘ive_åx
.
	`˛ór
();

11 
	}
}

13 
åx_t
* 
	gTønß˘i⁄M™agî
::
	$makeNewTønß˘i⁄
() {

14 
åx_t
* 
√w_åx
 = 
√w
 
	`åx_t
(
åx_id
++);

15 
a˘ive_åx
[
√w_åx
->
	`gëTønß˘i⁄Id
()] =Çew_trx;

16  
√w_åx
;

17 
	}
}

19 
åx_t
* 
	gTønß˘i⁄M™agî
::
	$gëTønß˘i⁄
(
åx_id_t
 
åx_id
) {

20 i‡(
a˘ive_åx
.
	`cou¡
(
åx_id
) != 0)

21  
a˘ive_åx
[
åx_id
];

23  
nuŒ±r
;

24 
	}
}

26 
boﬁ
 
	gTønß˘i⁄M™agî
::
	$dñëeTønß˘i⁄
(
åx_id_t
 
åx_id
) {

27 
åx_t
* 
åx
 = 
	`gëTønß˘i⁄
(
åx_id
);

28 i‡(!
åx
)

29  
Ál£
;

31 
åx_t
* 
åx_±r
 = 
nuŒ±r
;

33 autÿ
ô
 = 
a˘ive_åx
.
	`begö
(); ià!a˘ive_åx.
	`íd
(); ++it) {

34 i‡(
ô
 -> 
fú°
 =
åx_id
){

35 
åx_±r
 = 
ô
 -> 
£c⁄d
;

36 
a˘ive_åx
.
	`îa£
(
åx_id
);

37 
dñëe
 
åx_±r
;

38  
åue
;

42  
Ál£
;

43 
	}
}

	@src/univ.cpp

1 
	~"b±_öã∫Æ.h
"

9 
BufPoﬁ
 
poﬁ
;

10 
LockM™agî
 
lock_sys
;

12 
boﬁ
 
	$föd_Àaf
(
TabÀ
* 
èbÀ
, 
öt64_t
 
key
, 
LófPage
** 
out_Àaf_node
) {

14 
i
 = 0;

15 
off_t
 
roŸ_off£t
 = 
èbÀ
->
dbhódî
.root_offset;

17 i‡(
roŸ_off£t
 == 0) {

18  
Ál£
;

21 
NodePage
* 
∑ge
;

22 
∑ge
 = (
NodePage
*)
	`gë_∑ge
(
èbÀ
, 
	`FILEOFF_TO_PAGENUM
(
roŸ_off£t
));

24 !
∑ge
->
is_Àaf
) {

25 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)
∑ge
;

27 
i
 = 0;

28 
i
 < 
öã∫Æ_node
->
num_keys
) {

29 i‡(
key
 >
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
)) i++;

33 
NodePage
* 
√xtPage
 = (NodePage*)
	`gë_∑ge
(
èbÀ
,

34 
	`FILEOFF_TO_PAGENUM
(
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
)));

35 i‡(
√xtPage
->
is_Àaf
 =0 &&ÇextPage->
num_keys
 == 0){

36 
	`PANIC
("find_leaf infiniteÜoop!\n");

38 
	`ªÀa£_∑ge
((
Page
*)
∑ge
);

39 
∑ge
 = 
√xtPage
;

43 *
out_Àaf_node
 = (
LófPage
*)
∑ge
;

45  
åue
;

46 
	}
}

55 
boﬁ
 
	$föd_Àaf
(
TabÀ
* 
èbÀ
, 
öt64_t
 
key
, 
LófPage
** 
out_Àaf_node
, * 
buf_∑ge_i
) {

57 
BUF_POOL_MUTEX_ENTER
;

59 
i
 = 0;

60 
off_t
 
roŸ_off£t
 = 
èbÀ
->
dbhódî
.root_offset;

62 i‡(
roŸ_off£t
 == 0) {

63  
Ál£
;

66 
NodePage
* 
∑ge
;

67 
∑ge
 = (
NodePage
*)
	`gë_∑ge
(
èbÀ
, 
	`FILEOFF_TO_PAGENUM
(
roŸ_off£t
), 
buf_∑ge_i
);

69 !
∑ge
->
is_Àaf
) {

70 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)
∑ge
;

72 
i
 = 0;

73 
i
 < 
öã∫Æ_node
->
num_keys
) {

74 i‡(
key
 >
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
)) i++;

78 
NodePage
* 
√xtPage
 = (NodePage*)
	`gë_∑ge
(
èbÀ
,

79 
	`FILEOFF_TO_PAGENUM
(
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
)), 
buf_∑ge_i
);

82 i‡(!
√xtPage
) {

83 
	`ªÀa£_∑ge
((
Page
*)
∑ge
);

84 *
buf_∑ge_i
 = 
BUF_PAGE_MUTEX_FAIL
;

85  
Ál£
;

87 i‡(
√xtPage
->
is_Àaf
 =0 &&ÇextPage->
num_keys
 == 0){

88 
	`PANIC
("find_leaf infiniteÜoop!\n");

90 
	`ªÀa£_∑ge
((
Page
*)
∑ge
);

91 
∑ge
 = 
√xtPage
;

95 *
out_Àaf_node
 = (
LófPage
*)
∑ge
;

97  
åue
;

98 
	}
}

103 
öt64_t
* 
	$föd_ªc‹d
(
TabÀ
* 
èbÀ
, 
öt64_t
 
key
) {

104 
i
 = 0;

105 
öt64_t
* 
out_vÆue
;

107 
LófPage
* 
Àaf_node
;

108 i‡(!
	`föd_Àaf
(
èbÀ
, 
key
, &
Àaf_node
)) {

109  
NULL
;

112 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

113 i‡(
	`LEAF_KEY
(
Àaf_node
, 
i
Ë=
key
) {

114 
out_vÆue
 = (
öt64_t
*)
	`mÆloc
(
SIZE_COLUMN
 * (int64_t));

115 
	`mem˝y
(
out_vÆue
, 
	`LEAF_VALUE
(
Àaf_node
, 
i
), 
SIZE_VALUE
);

116 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
);

117  
out_vÆue
;

121 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
);

122  
NULL
;

123 
	}
}

130 
öt64_t
* 
	$föd_ªc‹d
(
TabÀ
* 
èbÀ
, 
öt64_t
 
key
, 
åx_t
* 
åx
) {

132 
i
 = 0;

133 
buf_∑ge_i
 = 0;

134 
öt64_t
* 
out_vÆue
;

136 
LófPage
* 
Àaf_node
;

140 !
	`föd_Àaf
(
èbÀ
, 
key
, &
Àaf_node
, &
buf_∑ge_i
)) {

141 i‡(
buf_∑ge_i
 !
BUF_PAGE_MUTEX_FAIL
)

142  
nuŒ±r
;

146 i‡(!
lock_sys
.
	`acquúe_lock
(
åx
, 
èbÀ
->
èbÀ_id
, 
poﬁ
.
∑ges
[
buf_∑ge_i
].
∑gíum
, 
key
, 
LOCK_S
, buf_page_i)) {

147 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
, &
buf_∑ge_i
);

148 
åx
->
	`£tSèã
(
ABORTED
);

149  
nuŒ±r
;

152 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

153 i‡(
	`LEAF_KEY
(
Àaf_node
, 
i
Ë=
key
) {

154 
out_vÆue
 = (
öt64_t
*)
	`mÆloc
(
SIZE_COLUMN
 * (int64_t));

155 
	`mem˝y
(
out_vÆue
, 
	`LEAF_VALUE
(
Àaf_node
, 
i
), 
SIZE_VALUE
);

156 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
, &
buf_∑ge_i
);

157  
out_vÆue
;

161 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
, &
buf_∑ge_i
);

162  
nuŒ±r
;

163 
	}
}

168 
	$cut
–
Àngth
 ) {

169 i‡(
Àngth
 % 2 == 0)

170  
Àngth
/2;

172  
Àngth
/2 + 1;

173 
	}
}

	@src/update.cpp

1 
	~"b±_öã∫Æ.h
"

4 
	$upd©e_ªc‹d
(
TabÀ
* 
èbÀ
, 
öt64_t
 
key
, i¡64_t* 
vÆue
, 
åx_t
* 
åx
) {

5 
i
 = 0;

6 
buf_∑ge_i
 = 0;

7 
LófPage
* 
Àaf_node
;

9 !
	`föd_Àaf
(
èbÀ
, 
key
, &
Àaf_node
, &
buf_∑ge_i
)) {

10 i‡(
buf_∑ge_i
 !
BUF_PAGE_MUTEX_FAIL
)

14 i‡(!
lock_sys
.
	`acquúe_lock
(
åx
, 
èbÀ
->
èbÀ_id
, 
poﬁ
.
∑ges
[
buf_∑ge_i
].
∑gíum
, 
key
, 
LOCK_X
, buf_page_i)) {

15 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
, &
buf_∑ge_i
);

16 
åx
->
	`£tSèã
(
ABORTED
);

20 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

21 i‡(
	`LEAF_KEY
(
Àaf_node
, 
i
Ë=
key
) {

22 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
i
), 
vÆue
, 
SIZE_VALUE
);

23 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
, &
buf_∑ge_i
);

28 
	`ªÀa£_∑ge
((
Page
*)
Àaf_node
, &
buf_∑ge_i
);

30 
	}
}

	@test.cpp

1 
	~<muãx
>

2 
	~<c⁄dôi⁄_v¨übÀ
>

3 
	~<un‹dîed_m≠
>

4 
	~<io°ªam
>

5 
	~<li°
>

6 
	~<ve˘‹
>

7 
	~<°ack
>

8 
	~<Æg‹ôhm
>

9 
usög
 
«me•a˚
 
	g°d
;

10 
	sèrj™_t
 {

11 
èrj™_t
(Ë: 
waôög_åx_id
(-1), 
föished
(
Ál£
), 
dfs_‹dî
(-1) {};

12 
	mwaôög_åx_id
;

13 
boﬁ
 
	mföished
;

14 
	mdfs_‹dî
;

17 ˛as†
	cDLCheckî
 {

18 
	mpublic
:

19 
°d
::
°ack
<
èrj™_t
*> 
s_èrj™
;

20 
	mdfs_‹dî
 = -1;

21 
	$dfs_èrj™
(
èrj™_t
* 
cur
) {

22 
cur
->
dfs_‹dî
 = 
this
->dfs_order++;

23 
s_èrj™
.
	`push
(
cur
);

25 
mö_‹dî
 = 
cur
->
dfs_‹dî
;

27 
èrj™_t
* 
√xt
 = &(
dl_gøph
[
cur
->
waôög_åx_id
]);

29 i‡(
√xt
->
dfs_‹dî
 == -1)

30 
mö_‹dî
 = 
°d
::
	`mö
(mö_‹dî, 
	`dfs_èrj™
(
√xt
));

31 i‡(!
√xt
->
föished
)

32 
mö_‹dî
 = 
°d
::
	`mö
(mö_‹dî, 
√xt
->
dfs_‹dî
);

34 i‡(
mö_‹dî
 =
cur
->
dfs_‹dî
) {

35 
èrj™_t
* 
tmp
 = 
nuŒ±r
;

36 
˙t_size
 = 0;

38 i‡(
˙t_size
 == 1)

39 
cy˛e_Êag
 = 
åue
;

40 
˙t_size
++;

41 
tmp
 = 
s_èrj™
.
	`t›
();

42 
s_èrj™
.
	`p›
();

44 i‡(
cur
 =
tmp
)

48 
cur
 -> 
föished
 = 
åue
;

49  
mö_‹dî
;

51 
boﬁ
 
cy˛e_Êag
 = 
Ál£
;

52 
°d
::
un‹dîed_m≠
<, 
èrj™_t
> 
dl_gøph
;

54 
boﬁ
 
	$is_cy˛ic
 (){

55 autÿ
ô
 = 
dl_gøph
.
	`begö
(); ià!dl_gøph.
	`íd
(); ++it) {

56 i‡(
ô
->
£c⁄d
.
dfs_‹dî
 == -1)

57 
	`dfs_èrj™
(&(
ô
->
£c⁄d
));

58 i‡(
cy˛e_Êag
) {

60  
åue
;

63 
	}
}

64 
boﬁ
 
ch™ge_w©ög_li°
(
åx_id
, 
o_waô_f‹
, 
n_waô_f‹
);

65 
boﬁ
 
dódlock_checkög
(
åx_id
, 
waô_f‹
);

69 
	$maö
(){

70 
li°
<> 
li
;

72 
li
.
	`push_back
(1);

73 
li
.
	`push_back
(2);

75 * 
±r
 = &
li
.
	`back
();

76 autÿ
i
 : 
li
)

77 
cout
 << 
i
 << 
ídl
;

79 *
±r
 = 3;

81 autÿ
i
 : 
li
)

82 
cout
 << 
i
 << 
ídl
;

84 
muãx
 
mut
;

85 
c⁄dôi⁄_v¨übÀ
 
cv
;

86 
mut
.
	`lock
();

87 
cv
.
	`nŸify_Æl
();

88 
cout
 << "HAHA" << 
ídl
;

90 
mut
.
	`u∆ock
();

91 
	tSèã
;

92 
Sèã
 
i
 = 1;

93 
	sKKK
 {

94 
	`KKK
(
a
, 
b
Ë: 
	`a
◊), 
	`b
(b) {};

95 
a
;

96 
b
;

99 
	`KKK
(3,5);

101 
boﬁ
 
ªt
 = 
mut
.
	`åy_lock
();

102 i‡(
ªt
)

103 {
cout
 << "YESY" << 
ídl
; 
mut
.
	`u∆ock
();}

105 
cout
 << "??" << 
ídl
;

108 
	}
}

	@
1
.
0
25
374
include/bpt.h
include/bpt_internal.h
include/buf.h
include/deadlock.h
include/file.h
include/lock.h
include/page.h
include/panic.h
include/table.h
include/trx.h
include/types.h
src/bpt_ext.cpp
src/buf.cpp
src/deadlock.cpp
src/delete.cpp
src/file.cpp
src/global_vars.cpp
src/insert.cpp
src/lock.cpp
src/main.cpp
src/table.cpp
src/trx.cpp
src/univ.cpp
src/update.cpp
test.cpp
